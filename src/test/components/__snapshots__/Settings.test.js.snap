// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Unknown
    isOpen={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "isOpen": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": <div />,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Modal
          ariaHideApp={false}
          bodyOpenClassName="ReactModal__Body--open"
          className="Modal"
          closeTimeoutMS={0}
          contentLabel="Settings"
          isOpen={false}
          onRequestClose={[Function]}
          overlayClassName="Overlay"
          parentSelector={[Function]}
          portalClassName="ReactModalPortal"
          shouldCloseOnEsc={true}
          shouldCloseOnOverlayClick={true}
          shouldFocusAfterRender={true}
          shouldReturnFocusAfterClose={true}
>
          <div
                    className="inside"
          />
          <Connect(Component) />
</Modal>,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": Modal {
            "_reactInternalFiber": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 5,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "isOpen": true,
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "isOpen": true,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "isOpen": true,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "capturedValue": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "capturedValue": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 32,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "isOpen": true,
                                                                      }
                        }
/>,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div />
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "callbackList": null,
                      "capturedValues": null,
                      "expirationTime": 0,
                      "first": null,
                      "hasForceUpdate": false,
                      "isInitialized": true,
                      "isProcessing": false,
                      "last": null,
                    },
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                    "lineNumber": 8,
                  },
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Modal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</Modal>,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Modal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</Modal>,
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div />,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": ModalPortal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "afterClose": [Function],
                    "ariaAttributes": [Function],
                    "buildClassName": [Function],
                    "close": [Function],
                    "closeWithTimeout": [Function],
                    "closeWithoutTimeout": [Function],
                    "contentHasFocus": [Function],
                    "context": Object {},
                    "focusContent": [Function],
                    "handleContentOnClick": [Function],
                    "handleContentOnMouseDown": [Function],
                    "handleContentOnMouseUp": [Function],
                    "handleKeyDown": [Function],
                    "handleOverlayOnClick": [Function],
                    "handleOverlayOnMouseDown": [Function],
                    "moveFromContentToOverlay": null,
                    "open": [Function],
                    "ownerHandlesClose": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "refs": Object {},
                    "requestClose": [Function],
                    "setContentRef": [Function],
                    "setOverlayRef": [Function],
                    "shouldBeClosed": [Function],
                    "shouldClose": null,
                    "state": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "isOpen": true,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "isOpen": true,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "isOpen": true,
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "isOpen": true,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "isOpen": true,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "capturedValue": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "capturedValue": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 32,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "isOpen": true,
                                                                      }
                        }
/>,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div />
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "callbackList": null,
                      "capturedValues": null,
                      "expirationTime": 0,
                      "first": null,
                      "hasForceUpdate": false,
                      "isInitialized": true,
                      "isProcessing": false,
                      "last": null,
                    },
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": Object {
                "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                "lineNumber": 9,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": ModalPortal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "afterClose": [Function],
                    "ariaAttributes": [Function],
                    "buildClassName": [Function],
                    "close": [Function],
                    "closeWithTimeout": [Function],
                    "closeWithoutTimeout": [Function],
                    "contentHasFocus": [Function],
                    "context": Object {},
                    "focusContent": [Function],
                    "handleContentOnClick": [Function],
                    "handleContentOnMouseDown": [Function],
                    "handleContentOnMouseUp": [Function],
                    "handleKeyDown": [Function],
                    "handleOverlayOnClick": [Function],
                    "handleOverlayOnMouseDown": [Function],
                    "moveFromContentToOverlay": null,
                    "open": [Function],
                    "ownerHandlesClose": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "refs": Object {},
                    "requestClose": [Function],
                    "setContentRef": [Function],
                    "setOverlayRef": [Function],
                    "shouldBeClosed": [Function],
                    "shouldClose": null,
                    "state": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": ModalPortal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "afterClose": [Function],
                    "ariaAttributes": [Function],
                    "buildClassName": [Function],
                    "close": [Function],
                    "closeWithTimeout": [Function],
                    "closeWithoutTimeout": [Function],
                    "contentHasFocus": [Function],
                    "context": Object {},
                    "focusContent": [Function],
                    "handleContentOnClick": [Function],
                    "handleContentOnMouseDown": [Function],
                    "handleContentOnMouseUp": [Function],
                    "handleKeyDown": [Function],
                    "handleOverlayOnClick": [Function],
                    "handleOverlayOnMouseDown": [Function],
                    "moveFromContentToOverlay": null,
                    "open": [Function],
                    "ownerHandlesClose": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "refs": Object {},
                    "requestClose": [Function],
                    "setContentRef": [Function],
                    "setOverlayRef": [Function],
                    "shouldBeClosed": [Function],
                    "shouldClose": null,
                    "state": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "index": 0,
                "key": null,
                "lastEffect": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": ModalPortal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "afterClose": [Function],
                    "ariaAttributes": [Function],
                    "buildClassName": [Function],
                    "close": [Function],
                    "closeWithTimeout": [Function],
                    "closeWithoutTimeout": [Function],
                    "contentHasFocus": [Function],
                    "context": Object {},
                    "focusContent": [Function],
                    "handleContentOnClick": [Function],
                    "handleContentOnMouseDown": [Function],
                    "handleContentOnMouseUp": [Function],
                    "handleKeyDown": [Function],
                    "handleOverlayOnClick": [Function],
                    "handleOverlayOnMouseDown": [Function],
                    "moveFromContentToOverlay": null,
                    "open": [Function],
                    "ownerHandlesClose": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "refs": Object {},
                    "requestClose": [Function],
                    "setContentRef": [Function],
                    "setOverlayRef": [Function],
                    "shouldBeClosed": [Function],
                    "shouldClose": null,
                    "state": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "memoizedProps": <ModalPortal
                  ariaHideApp={false}
                  bodyOpenClassName="ReactModal__Body--open"
                  className="Modal"
                  closeTimeoutMS={0}
                  contentLabel="Settings"
                  defaultStyles={
                                    Object {
                                                      "content": Object {
                                                        "WebkitOverflowScrolling": "touch",
                                                        "background": "#fff",
                                                        "border": "1px solid #ccc",
                                                        "borderRadius": "4px",
                                                        "bottom": "40px",
                                                        "left": "40px",
                                                        "outline": "none",
                                                        "overflow": "auto",
                                                        "padding": "20px",
                                                        "position": "absolute",
                                                        "right": "40px",
                                                        "top": "40px",
                                                      },
                                                      "overlay": Object {
                                                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                        "bottom": 0,
                                                        "left": 0,
                                                        "position": "fixed",
                                                        "right": 0,
                                                        "top": 0,
                                                      },
                                                    }
                  }
                  isOpen={false}
                  onRequestClose={[Function]}
                  overlayClassName="Overlay"
                  parentSelector={[Function]}
                  portalClassName="ReactModalPortal"
                  shouldCloseOnEsc={true}
                  shouldCloseOnOverlayClick={true}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  style={
                                    Object {
                                                      "content": Object {},
                                                      "overlay": Object {},
                                                    }
                  }
>
                  <div
                                    className="inside"
                  />
                  <Connect(Component) />
</ModalPortal>,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": <ModalPortal
                  ariaHideApp={false}
                  bodyOpenClassName="ReactModal__Body--open"
                  className="Modal"
                  closeTimeoutMS={0}
                  contentLabel="Settings"
                  defaultStyles={
                                    Object {
                                                      "content": Object {
                                                        "WebkitOverflowScrolling": "touch",
                                                        "background": "#fff",
                                                        "border": "1px solid #ccc",
                                                        "borderRadius": "4px",
                                                        "bottom": "40px",
                                                        "left": "40px",
                                                        "outline": "none",
                                                        "overflow": "auto",
                                                        "padding": "20px",
                                                        "position": "absolute",
                                                        "right": "40px",
                                                        "top": "40px",
                                                      },
                                                      "overlay": Object {
                                                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                        "bottom": 0,
                                                        "left": 0,
                                                        "position": "fixed",
                                                        "right": 0,
                                                        "top": 0,
                                                      },
                                                    }
                  }
                  isOpen={false}
                  onRequestClose={[Function]}
                  overlayClassName="Overlay"
                  parentSelector={[Function]}
                  portalClassName="ReactModalPortal"
                  shouldCloseOnEsc={true}
                  shouldCloseOnOverlayClick={true}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  style={
                                    Object {
                                                      "content": Object {},
                                                      "overlay": Object {},
                                                    }
                  }
>
                  <div
                                    className="inside"
                  />
                  <Connect(Component) />
</ModalPortal>,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div
                    class="ReactModalPortal"
/>,
                  "implementation": null,
                  "pendingChildren": null,
                },
                "tag": 4,
                "type": null,
                "updateQueue": null,
              },
              "effectTag": 5,
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 133,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": Array [
                    <div
                      className="inside"
/>,
                    <Connect(Component) />,
                  ],
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "memoizedState": Object {
                  "afterOpen": false,
                  "beforeClose": false,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": Array [
                    <div
                      className="inside"
/>,
                    <Connect(Component) />,
                  ],
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "ref": [Function],
                "return": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="inside"
                    />
                    <Connect(Component) />
</ModalPortal>,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="inside"
                    />
                    <Connect(Component) />
</ModalPortal>,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div
                      class="ReactModalPortal"
/>,
                    "implementation": null,
                    "pendingChildren": null,
                  },
                  "tag": 4,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": ModalPortal {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "afterClose": [Function],
                  "ariaAttributes": [Function],
                  "buildClassName": [Function],
                  "close": [Function],
                  "closeWithTimeout": [Function],
                  "closeWithoutTimeout": [Function],
                  "contentHasFocus": [Function],
                  "context": Object {},
                  "focusContent": [Function],
                  "handleContentOnClick": [Function],
                  "handleContentOnMouseDown": [Function],
                  "handleContentOnMouseUp": [Function],
                  "handleKeyDown": [Function],
                  "handleOverlayOnClick": [Function],
                  "handleOverlayOnMouseDown": [Function],
                  "moveFromContentToOverlay": null,
                  "open": [Function],
                  "ownerHandlesClose": [Function],
                  "props": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "refs": Object {},
                  "requestClose": [Function],
                  "setContentRef": [Function],
                  "setOverlayRef": [Function],
                  "shouldBeClosed": [Function],
                  "shouldClose": null,
                  "state": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 133,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": Array [
                    <div
                      className="inside"
/>,
                    <Connect(Component) />,
                  ],
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "memoizedState": Object {
                  "afterOpen": false,
                  "beforeClose": false,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": Array [
                    <div
                      className="inside"
/>,
                    <Connect(Component) />,
                  ],
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "ref": [Function],
                "return": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="inside"
                    />
                    <Connect(Component) />
</ModalPortal>,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="inside"
                    />
                    <Connect(Component) />
</ModalPortal>,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div
                      class="ReactModalPortal"
/>,
                    "implementation": null,
                    "pendingChildren": null,
                  },
                  "tag": 4,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": ModalPortal {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "afterClose": [Function],
                  "ariaAttributes": [Function],
                  "buildClassName": [Function],
                  "close": [Function],
                  "closeWithTimeout": [Function],
                  "closeWithoutTimeout": [Function],
                  "contentHasFocus": [Function],
                  "context": Object {},
                  "focusContent": [Function],
                  "handleContentOnClick": [Function],
                  "handleContentOnMouseDown": [Function],
                  "handleContentOnMouseUp": [Function],
                  "handleKeyDown": [Function],
                  "handleOverlayOnClick": [Function],
                  "handleOverlayOnMouseDown": [Function],
                  "moveFromContentToOverlay": null,
                  "open": [Function],
                  "ownerHandlesClose": [Function],
                  "props": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "refs": Object {},
                  "requestClose": [Function],
                  "setContentRef": [Function],
                  "setOverlayRef": [Function],
                  "shouldBeClosed": [Function],
                  "shouldClose": null,
                  "state": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "memoizedProps": Object {
                "ariaHideApp": false,
                "bodyOpenClassName": "ReactModal__Body--open",
                "children": Array [
                  <div
                    className="inside"
/>,
                  <Connect(Component) />,
                ],
                "className": "Modal",
                "closeTimeoutMS": 0,
                "contentLabel": "Settings",
                "isOpen": false,
                "onRequestClose": [Function],
                "overlayClassName": "Overlay",
                "parentSelector": [Function],
                "portalClassName": "ReactModalPortal",
                "shouldCloseOnEsc": true,
                "shouldCloseOnOverlayClick": true,
                "shouldFocusAfterRender": true,
                "shouldReturnFocusAfterClose": true,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "ariaHideApp": false,
                "bodyOpenClassName": "ReactModal__Body--open",
                "children": Array [
                  <div
                    className="inside"
/>,
                  <Connect(Component) />,
                ],
                "className": "Modal",
                "closeTimeoutMS": 0,
                "contentLabel": "Settings",
                "isOpen": false,
                "onRequestClose": [Function],
                "overlayClassName": "Overlay",
                "parentSelector": [Function],
                "portalClassName": "ReactModalPortal",
                "shouldCloseOnEsc": true,
                "shouldCloseOnOverlayClick": true,
                "shouldFocusAfterRender": true,
                "shouldReturnFocusAfterClose": true,
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 0,
                        "first": null,
                        "hasForceUpdate": false,
                        "isInitialized": true,
                        "isProcessing": false,
                        "last": null,
                      },
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "isOpen": true,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "isOpen": true,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 0,
                        "first": null,
                        "hasForceUpdate": false,
                        "isInitialized": true,
                        "isProcessing": false,
                        "last": null,
                      },
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                  "lineNumber": 8,
                },
                "alternate": null,
                "child": [Circular],
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": ModalPortal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "afterClose": [Function],
                    "ariaAttributes": [Function],
                    "buildClassName": [Function],
                    "close": [Function],
                    "closeWithTimeout": [Function],
                    "closeWithoutTimeout": [Function],
                    "contentHasFocus": [Function],
                    "context": Object {},
                    "focusContent": [Function],
                    "handleContentOnClick": [Function],
                    "handleContentOnMouseDown": [Function],
                    "handleContentOnMouseUp": [Function],
                    "handleKeyDown": [Function],
                    "handleOverlayOnClick": [Function],
                    "handleOverlayOnMouseDown": [Function],
                    "moveFromContentToOverlay": null,
                    "open": [Function],
                    "ownerHandlesClose": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "refs": Object {},
                    "requestClose": [Function],
                    "setContentRef": [Function],
                    "setOverlayRef": [Function],
                    "shouldBeClosed": [Function],
                    "shouldClose": null,
                    "state": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Modal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
>
                    <div
                                        className="inside"
                    />
                    <Connect(Component) />
</Modal>,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Modal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
>
                    <div
                                        className="inside"
                    />
                    <Connect(Component) />
</Modal>,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 0,
                        "first": null,
                        "hasForceUpdate": false,
                        "isInitialized": true,
                        "isProcessing": false,
                        "last": null,
                      },
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "isOpen": true,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "isOpen": true,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 0,
                        "first": null,
                        "hasForceUpdate": false,
                        "isInitialized": true,
                        "isProcessing": false,
                        "last": null,
                      },
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": <div />,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": [Circular],
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_reactInternalInstance": Object {},
            "context": Object {},
            "node": <div
              class="ReactModalPortal"
/>,
            "portal": ModalPortal {
              "_reactInternalFiber": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</Modal>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</Modal>,
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "isOpen": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "isOpen": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                    "lineNumber": 9,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "effectTag": 5,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                      "lineNumber": 8,
                    },
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Modal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</Modal>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Modal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</Modal>,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": <div />,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": [Circular],
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 133,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": Array [
                    <div
                      className="inside"
/>,
                    <Connect(Component) />,
                  ],
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "memoizedState": Object {
                  "afterOpen": false,
                  "beforeClose": false,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": Array [
                    <div
                      className="inside"
/>,
                    <Connect(Component) />,
                  ],
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "ref": [Function],
                "return": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="inside"
                    />
                    <Connect(Component) />
</ModalPortal>,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="inside"
                    />
                    <Connect(Component) />
</ModalPortal>,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</Modal>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</Modal>,
                        },
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                      "lineNumber": 9,
                    },
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 5,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</Modal>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</Modal>,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": <div />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": [Circular],
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div
                      class="ReactModalPortal"
/>,
                    "implementation": null,
                    "pendingChildren": null,
                  },
                  "tag": 4,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": [Circular],
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "afterClose": [Function],
              "ariaAttributes": [Function],
              "buildClassName": [Function],
              "close": [Function],
              "closeWithTimeout": [Function],
              "closeWithoutTimeout": [Function],
              "contentHasFocus": [Function],
              "context": Object {},
              "focusContent": [Function],
              "handleContentOnClick": [Function],
              "handleContentOnMouseDown": [Function],
              "handleContentOnMouseUp": [Function],
              "handleKeyDown": [Function],
              "handleOverlayOnClick": [Function],
              "handleOverlayOnMouseDown": [Function],
              "moveFromContentToOverlay": null,
              "open": [Function],
              "ownerHandlesClose": [Function],
              "props": Object {
                "ariaHideApp": false,
                "bodyOpenClassName": "ReactModal__Body--open",
                "children": Array [
                  <div
                    className="inside"
/>,
                  <Connect(Component) />,
                ],
                "className": "Modal",
                "closeTimeoutMS": 0,
                "contentLabel": "Settings",
                "defaultStyles": Object {
                  "content": Object {
                    "WebkitOverflowScrolling": "touch",
                    "background": "#fff",
                    "border": "1px solid #ccc",
                    "borderRadius": "4px",
                    "bottom": "40px",
                    "left": "40px",
                    "outline": "none",
                    "overflow": "auto",
                    "padding": "20px",
                    "position": "absolute",
                    "right": "40px",
                    "top": "40px",
                  },
                  "overlay": Object {
                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                  },
                },
                "isOpen": false,
                "onRequestClose": [Function],
                "overlayClassName": "Overlay",
                "parentSelector": [Function],
                "portalClassName": "ReactModalPortal",
                "shouldCloseOnEsc": true,
                "shouldCloseOnOverlayClick": true,
                "shouldFocusAfterRender": true,
                "shouldReturnFocusAfterClose": true,
                "style": Object {
                  "content": Object {},
                  "overlay": Object {},
                },
              },
              "refs": Object {},
              "requestClose": [Function],
              "setContentRef": [Function],
              "setOverlayRef": [Function],
              "shouldBeClosed": [Function],
              "shouldClose": null,
              "state": Object {
                "afterOpen": false,
                "beforeClose": false,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "portalRef": [Function],
            "props": Object {
              "ariaHideApp": false,
              "bodyOpenClassName": "ReactModal__Body--open",
              "children": Array [
                <div
                  className="inside"
/>,
                <Connect(Component) />,
              ],
              "className": "Modal",
              "closeTimeoutMS": 0,
              "contentLabel": "Settings",
              "isOpen": false,
              "onRequestClose": [Function],
              "overlayClassName": "Overlay",
              "parentSelector": [Function],
              "portalClassName": "ReactModalPortal",
              "shouldCloseOnEsc": true,
              "shouldCloseOnOverlayClick": true,
              "shouldFocusAfterRender": true,
              "shouldReturnFocusAfterClose": true,
            },
            "refs": Object {},
            "removePortal": [Function],
            "renderPortal": [Function],
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "ariaHideApp": false,
            "bodyOpenClassName": "ReactModal__Body--open",
            "children": Array [
              <div
                className="inside"
/>,
              <Connect(Component) />,
            ],
            "className": "Modal",
            "closeTimeoutMS": 0,
            "contentLabel": "Settings",
            "isOpen": false,
            "onRequestClose": [Function],
            "overlayClassName": "Overlay",
            "parentSelector": [Function],
            "portalClassName": "ReactModalPortal",
            "shouldCloseOnEsc": true,
            "shouldCloseOnOverlayClick": true,
            "shouldFocusAfterRender": true,
            "shouldReturnFocusAfterClose": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": ModalPortal {
              "_reactInternalFiber": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</Modal>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</Modal>,
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "isOpen": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "isOpen": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                    "lineNumber": 9,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "effectTag": 5,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                      "lineNumber": 8,
                    },
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Modal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</Modal>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Modal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</Modal>,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": <div />,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": Modal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "node": <div
                      class="ReactModalPortal"
/>,
                    "portal": [Circular],
                    "portalRef": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "refs": Object {},
                    "removePortal": [Function],
                    "renderPortal": [Function],
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 133,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": Array [
                    <div
                      className="inside"
/>,
                    <Connect(Component) />,
                  ],
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "memoizedState": Object {
                  "afterOpen": false,
                  "beforeClose": false,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": Array [
                    <div
                      className="inside"
/>,
                    <Connect(Component) />,
                  ],
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "ref": [Function],
                "return": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="inside"
                    />
                    <Connect(Component) />
</ModalPortal>,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="inside"
                    />
                    <Connect(Component) />
</ModalPortal>,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</Modal>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</Modal>,
                        },
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                      "lineNumber": 9,
                    },
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 5,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</Modal>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</Modal>,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": <div />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": Modal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "node": <div
                        class="ReactModalPortal"
/>,
                      "portal": [Circular],
                      "portalRef": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                      },
                      "refs": Object {},
                      "removePortal": [Function],
                      "renderPortal": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div
                      class="ReactModalPortal"
/>,
                    "implementation": null,
                    "pendingChildren": null,
                  },
                  "tag": 4,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": [Circular],
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "afterClose": [Function],
              "ariaAttributes": [Function],
              "buildClassName": [Function],
              "close": [Function],
              "closeWithTimeout": [Function],
              "closeWithoutTimeout": [Function],
              "contentHasFocus": [Function],
              "context": Object {},
              "focusContent": [Function],
              "handleContentOnClick": [Function],
              "handleContentOnMouseDown": [Function],
              "handleContentOnMouseUp": [Function],
              "handleKeyDown": [Function],
              "handleOverlayOnClick": [Function],
              "handleOverlayOnMouseDown": [Function],
              "moveFromContentToOverlay": null,
              "open": [Function],
              "ownerHandlesClose": [Function],
              "props": Object {
                "ariaHideApp": false,
                "bodyOpenClassName": "ReactModal__Body--open",
                "children": Array [
                  <div
                    className="inside"
/>,
                  <Connect(Component) />,
                ],
                "className": "Modal",
                "closeTimeoutMS": 0,
                "contentLabel": "Settings",
                "defaultStyles": Object {
                  "content": Object {
                    "WebkitOverflowScrolling": "touch",
                    "background": "#fff",
                    "border": "1px solid #ccc",
                    "borderRadius": "4px",
                    "bottom": "40px",
                    "left": "40px",
                    "outline": "none",
                    "overflow": "auto",
                    "padding": "20px",
                    "position": "absolute",
                    "right": "40px",
                    "top": "40px",
                  },
                  "overlay": Object {
                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                  },
                },
                "isOpen": false,
                "onRequestClose": [Function],
                "overlayClassName": "Overlay",
                "parentSelector": [Function],
                "portalClassName": "ReactModalPortal",
                "shouldCloseOnEsc": true,
                "shouldCloseOnOverlayClick": true,
                "shouldFocusAfterRender": true,
                "shouldReturnFocusAfterClose": true,
                "style": Object {
                  "content": Object {},
                  "overlay": Object {},
                },
              },
              "refs": Object {},
              "requestClose": [Function],
              "setContentRef": [Function],
              "setOverlayRef": [Function],
              "shouldBeClosed": [Function],
              "shouldClose": null,
              "state": Object {
                "afterOpen": false,
                "beforeClose": false,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "ariaHideApp": false,
              "bodyOpenClassName": "ReactModal__Body--open",
              "children": Array [
                <div
                  className="inside"
/>,
                <Connect(Component) />,
              ],
              "className": "Modal",
              "closeTimeoutMS": 0,
              "contentLabel": "Settings",
              "defaultStyles": Object {
                "content": Object {
                  "WebkitOverflowScrolling": "touch",
                  "background": "#fff",
                  "border": "1px solid #ccc",
                  "borderRadius": "4px",
                  "bottom": "40px",
                  "left": "40px",
                  "outline": "none",
                  "overflow": "auto",
                  "padding": "20px",
                  "position": "absolute",
                  "right": "40px",
                  "top": "40px",
                },
                "overlay": Object {
                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                },
              },
              "isOpen": false,
              "onRequestClose": [Function],
              "overlayClassName": "Overlay",
              "parentSelector": [Function],
              "portalClassName": "ReactModalPortal",
              "shouldCloseOnEsc": true,
              "shouldCloseOnOverlayClick": true,
              "shouldFocusAfterRender": true,
              "shouldReturnFocusAfterClose": true,
              "style": Object {
                "content": Object {},
                "overlay": Object {},
              },
            },
            "ref": [Function],
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "isOpen": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": <div />,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Modal
            ariaHideApp={false}
            bodyOpenClassName="ReactModal__Body--open"
            className="Modal"
            closeTimeoutMS={0}
            contentLabel="Settings"
            isOpen={false}
            onRequestClose={[Function]}
            overlayClassName="Overlay"
            parentSelector={[Function]}
            portalClassName="ReactModalPortal"
            shouldCloseOnEsc={true}
            shouldCloseOnOverlayClick={true}
            shouldFocusAfterRender={true}
            shouldReturnFocusAfterClose={true}
>
            <div
                        className="inside"
            />
            <Connect(Component) />
</Modal>,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": Modal {
              "_reactInternalFiber": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 0,
                        "first": null,
                        "hasForceUpdate": false,
                        "isInitialized": true,
                        "isProcessing": false,
                        "last": null,
                      },
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                      "lineNumber": 8,
                    },
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Modal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</Modal>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Modal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</Modal>,
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div />,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "isOpen": true,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "isOpen": true,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 0,
                        "first": null,
                        "hasForceUpdate": false,
                        "isInitialized": true,
                        "isProcessing": false,
                        "last": null,
                      },
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                  "lineNumber": 9,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "memoizedProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="inside"
                    />
                    <Connect(Component) />
</ModalPortal>,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="inside"
                    />
                    <Connect(Component) />
</ModalPortal>,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div
                      class="ReactModalPortal"
/>,
                    "implementation": null,
                    "pendingChildren": null,
                  },
                  "tag": 4,
                  "type": null,
                  "updateQueue": null,
                },
                "effectTag": 5,
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": ModalPortal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "afterClose": [Function],
                    "ariaAttributes": [Function],
                    "buildClassName": [Function],
                    "close": [Function],
                    "closeWithTimeout": [Function],
                    "closeWithoutTimeout": [Function],
                    "contentHasFocus": [Function],
                    "context": Object {},
                    "focusContent": [Function],
                    "handleContentOnClick": [Function],
                    "handleContentOnMouseDown": [Function],
                    "handleContentOnMouseUp": [Function],
                    "handleKeyDown": [Function],
                    "handleOverlayOnClick": [Function],
                    "handleOverlayOnMouseDown": [Function],
                    "moveFromContentToOverlay": null,
                    "open": [Function],
                    "ownerHandlesClose": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "refs": Object {},
                    "requestClose": [Function],
                    "setContentRef": [Function],
                    "setOverlayRef": [Function],
                    "shouldBeClosed": [Function],
                    "shouldClose": null,
                    "state": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "index": 0,
                "key": null,
                "lastEffect": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": ModalPortal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "afterClose": [Function],
                    "ariaAttributes": [Function],
                    "buildClassName": [Function],
                    "close": [Function],
                    "closeWithTimeout": [Function],
                    "closeWithoutTimeout": [Function],
                    "contentHasFocus": [Function],
                    "context": Object {},
                    "focusContent": [Function],
                    "handleContentOnClick": [Function],
                    "handleContentOnMouseDown": [Function],
                    "handleContentOnMouseUp": [Function],
                    "handleKeyDown": [Function],
                    "handleOverlayOnClick": [Function],
                    "handleOverlayOnMouseDown": [Function],
                    "moveFromContentToOverlay": null,
                    "open": [Function],
                    "ownerHandlesClose": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "refs": Object {},
                    "requestClose": [Function],
                    "setContentRef": [Function],
                    "setOverlayRef": [Function],
                    "shouldBeClosed": [Function],
                    "shouldClose": null,
                    "state": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "memoizedProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": Array [
                    <div
                      className="inside"
/>,
                    <Connect(Component) />,
                  ],
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": Array [
                    <div
                      className="inside"
/>,
                    <Connect(Component) />,
                  ],
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": FiberNode {
                          "_debugID": 9,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 133,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "memoizedState": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "ref": [Function],
                          "return": FiberNode {
                            "_debugID": 8,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="inside"
                              />
                              <Connect(Component) />
</ModalPortal>,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="inside"
                              />
                              <Connect(Component) />
</ModalPortal>,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div
                                class="ReactModalPortal"
/>,
                              "implementation": null,
                              "pendingChildren": null,
                            },
                            "tag": 4,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": ModalPortal {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "afterClose": [Function],
                            "ariaAttributes": [Function],
                            "buildClassName": [Function],
                            "close": [Function],
                            "closeWithTimeout": [Function],
                            "closeWithoutTimeout": [Function],
                            "contentHasFocus": [Function],
                            "context": Object {},
                            "focusContent": [Function],
                            "handleContentOnClick": [Function],
                            "handleContentOnMouseDown": [Function],
                            "handleContentOnMouseUp": [Function],
                            "handleKeyDown": [Function],
                            "handleOverlayOnClick": [Function],
                            "handleOverlayOnMouseDown": [Function],
                            "moveFromContentToOverlay": null,
                            "open": [Function],
                            "ownerHandlesClose": [Function],
                            "props": Object {
                              "ariaHideApp": false,
                              "bodyOpenClassName": "ReactModal__Body--open",
                              "children": Array [
                                <div
                                  className="inside"
/>,
                                <Connect(Component) />,
                              ],
                              "className": "Modal",
                              "closeTimeoutMS": 0,
                              "contentLabel": "Settings",
                              "defaultStyles": Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              },
                              "isOpen": false,
                              "onRequestClose": [Function],
                              "overlayClassName": "Overlay",
                              "parentSelector": [Function],
                              "portalClassName": "ReactModalPortal",
                              "shouldCloseOnEsc": true,
                              "shouldCloseOnOverlayClick": true,
                              "shouldFocusAfterRender": true,
                              "shouldReturnFocusAfterClose": true,
                              "style": Object {
                                "content": Object {},
                                "overlay": Object {},
                              },
                            },
                            "refs": Object {},
                            "requestClose": [Function],
                            "setContentRef": [Function],
                            "setOverlayRef": [Function],
                            "shouldBeClosed": [Function],
                            "shouldClose": null,
                            "state": Object {
                              "afterOpen": false,
                              "beforeClose": false,
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "isOpen": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "isOpen": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": FiberNode {
                          "_debugID": 9,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 133,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "memoizedState": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "ref": [Function],
                          "return": FiberNode {
                            "_debugID": 8,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="inside"
                              />
                              <Connect(Component) />
</ModalPortal>,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="inside"
                              />
                              <Connect(Component) />
</ModalPortal>,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div
                                class="ReactModalPortal"
/>,
                              "implementation": null,
                              "pendingChildren": null,
                            },
                            "tag": 4,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": ModalPortal {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "afterClose": [Function],
                            "ariaAttributes": [Function],
                            "buildClassName": [Function],
                            "close": [Function],
                            "closeWithTimeout": [Function],
                            "closeWithoutTimeout": [Function],
                            "contentHasFocus": [Function],
                            "context": Object {},
                            "focusContent": [Function],
                            "handleContentOnClick": [Function],
                            "handleContentOnMouseDown": [Function],
                            "handleContentOnMouseUp": [Function],
                            "handleKeyDown": [Function],
                            "handleOverlayOnClick": [Function],
                            "handleOverlayOnMouseDown": [Function],
                            "moveFromContentToOverlay": null,
                            "open": [Function],
                            "ownerHandlesClose": [Function],
                            "props": Object {
                              "ariaHideApp": false,
                              "bodyOpenClassName": "ReactModal__Body--open",
                              "children": Array [
                                <div
                                  className="inside"
/>,
                                <Connect(Component) />,
                              ],
                              "className": "Modal",
                              "closeTimeoutMS": 0,
                              "contentLabel": "Settings",
                              "defaultStyles": Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              },
                              "isOpen": false,
                              "onRequestClose": [Function],
                              "overlayClassName": "Overlay",
                              "parentSelector": [Function],
                              "portalClassName": "ReactModalPortal",
                              "shouldCloseOnEsc": true,
                              "shouldCloseOnOverlayClick": true,
                              "shouldFocusAfterRender": true,
                              "shouldReturnFocusAfterClose": true,
                              "style": Object {
                                "content": Object {},
                                "overlay": Object {},
                              },
                            },
                            "refs": Object {},
                            "requestClose": [Function],
                            "setContentRef": [Function],
                            "setOverlayRef": [Function],
                            "shouldBeClosed": [Function],
                            "shouldClose": null,
                            "state": Object {
                              "afterOpen": false,
                              "beforeClose": false,
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                    "lineNumber": 8,
                  },
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Modal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</Modal>,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Modal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</Modal>,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": FiberNode {
                          "_debugID": 9,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 133,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "memoizedState": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "ref": [Function],
                          "return": FiberNode {
                            "_debugID": 8,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="inside"
                              />
                              <Connect(Component) />
</ModalPortal>,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="inside"
                              />
                              <Connect(Component) />
</ModalPortal>,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div
                                class="ReactModalPortal"
/>,
                              "implementation": null,
                              "pendingChildren": null,
                            },
                            "tag": 4,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": ModalPortal {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "afterClose": [Function],
                            "ariaAttributes": [Function],
                            "buildClassName": [Function],
                            "close": [Function],
                            "closeWithTimeout": [Function],
                            "closeWithoutTimeout": [Function],
                            "contentHasFocus": [Function],
                            "context": Object {},
                            "focusContent": [Function],
                            "handleContentOnClick": [Function],
                            "handleContentOnMouseDown": [Function],
                            "handleContentOnMouseUp": [Function],
                            "handleKeyDown": [Function],
                            "handleOverlayOnClick": [Function],
                            "handleOverlayOnMouseDown": [Function],
                            "moveFromContentToOverlay": null,
                            "open": [Function],
                            "ownerHandlesClose": [Function],
                            "props": Object {
                              "ariaHideApp": false,
                              "bodyOpenClassName": "ReactModal__Body--open",
                              "children": Array [
                                <div
                                  className="inside"
/>,
                                <Connect(Component) />,
                              ],
                              "className": "Modal",
                              "closeTimeoutMS": 0,
                              "contentLabel": "Settings",
                              "defaultStyles": Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              },
                              "isOpen": false,
                              "onRequestClose": [Function],
                              "overlayClassName": "Overlay",
                              "parentSelector": [Function],
                              "portalClassName": "ReactModalPortal",
                              "shouldCloseOnEsc": true,
                              "shouldCloseOnOverlayClick": true,
                              "shouldFocusAfterRender": true,
                              "shouldReturnFocusAfterClose": true,
                              "style": Object {
                                "content": Object {},
                                "overlay": Object {},
                              },
                            },
                            "refs": Object {},
                            "requestClose": [Function],
                            "setContentRef": [Function],
                            "setOverlayRef": [Function],
                            "shouldBeClosed": [Function],
                            "shouldClose": null,
                            "state": Object {
                              "afterOpen": false,
                              "beforeClose": false,
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "isOpen": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "isOpen": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": FiberNode {
                          "_debugID": 9,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 133,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "memoizedState": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": Array [
                              <div
                                className="inside"
/>,
                              <Connect(Component) />,
                            ],
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "ref": [Function],
                          "return": FiberNode {
                            "_debugID": 8,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="inside"
                              />
                              <Connect(Component) />
</ModalPortal>,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="inside"
                              />
                              <Connect(Component) />
</ModalPortal>,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div
                                class="ReactModalPortal"
/>,
                              "implementation": null,
                              "pendingChildren": null,
                            },
                            "tag": 4,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": ModalPortal {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "afterClose": [Function],
                            "ariaAttributes": [Function],
                            "buildClassName": [Function],
                            "close": [Function],
                            "closeWithTimeout": [Function],
                            "closeWithoutTimeout": [Function],
                            "contentHasFocus": [Function],
                            "context": Object {},
                            "focusContent": [Function],
                            "handleContentOnClick": [Function],
                            "handleContentOnMouseDown": [Function],
                            "handleContentOnMouseUp": [Function],
                            "handleKeyDown": [Function],
                            "handleOverlayOnClick": [Function],
                            "handleOverlayOnMouseDown": [Function],
                            "moveFromContentToOverlay": null,
                            "open": [Function],
                            "ownerHandlesClose": [Function],
                            "props": Object {
                              "ariaHideApp": false,
                              "bodyOpenClassName": "ReactModal__Body--open",
                              "children": Array [
                                <div
                                  className="inside"
/>,
                                <Connect(Component) />,
                              ],
                              "className": "Modal",
                              "closeTimeoutMS": 0,
                              "contentLabel": "Settings",
                              "defaultStyles": Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              },
                              "isOpen": false,
                              "onRequestClose": [Function],
                              "overlayClassName": "Overlay",
                              "parentSelector": [Function],
                              "portalClassName": "ReactModalPortal",
                              "shouldCloseOnEsc": true,
                              "shouldCloseOnOverlayClick": true,
                              "shouldFocusAfterRender": true,
                              "shouldReturnFocusAfterClose": true,
                              "style": Object {
                                "content": Object {},
                                "overlay": Object {},
                              },
                            },
                            "refs": Object {},
                            "requestClose": [Function],
                            "setContentRef": [Function],
                            "setOverlayRef": [Function],
                            "shouldBeClosed": [Function],
                            "shouldClose": null,
                            "state": Object {
                              "afterOpen": false,
                              "beforeClose": false,
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": <div />,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": [Circular],
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "context": Object {},
              "node": <div
                class="ReactModalPortal"
/>,
              "portal": ModalPortal {
                "_reactInternalFiber": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</Modal>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</Modal>,
                        },
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                      "lineNumber": 9,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "effectTag": 5,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</Modal>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</Modal>,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": <div />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": [Circular],
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 7,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 6,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <Modal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
>
                              <div
                                                            className="inside"
                              />
                              <Connect(Component) />
</Modal>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <Modal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
>
                              <div
                                                            className="inside"
                              />
                              <Connect(Component) />
</Modal>,
                          },
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div />,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 5,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "isOpen": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "isOpen": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</Modal>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</Modal>,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "isOpen": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "isOpen": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": [Circular],
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": [Circular],
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_reactInternalInstance": Object {},
                "afterClose": [Function],
                "ariaAttributes": [Function],
                "buildClassName": [Function],
                "close": [Function],
                "closeWithTimeout": [Function],
                "closeWithoutTimeout": [Function],
                "contentHasFocus": [Function],
                "context": Object {},
                "focusContent": [Function],
                "handleContentOnClick": [Function],
                "handleContentOnMouseDown": [Function],
                "handleContentOnMouseUp": [Function],
                "handleKeyDown": [Function],
                "handleOverlayOnClick": [Function],
                "handleOverlayOnMouseDown": [Function],
                "moveFromContentToOverlay": null,
                "open": [Function],
                "ownerHandlesClose": [Function],
                "props": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": Array [
                    <div
                      className="inside"
/>,
                    <Connect(Component) />,
                  ],
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "refs": Object {},
                "requestClose": [Function],
                "setContentRef": [Function],
                "setOverlayRef": [Function],
                "shouldBeClosed": [Function],
                "shouldClose": null,
                "state": Object {
                  "afterOpen": false,
                  "beforeClose": false,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "portalRef": [Function],
              "props": Object {
                "ariaHideApp": false,
                "bodyOpenClassName": "ReactModal__Body--open",
                "children": Array [
                  <div
                    className="inside"
/>,
                  <Connect(Component) />,
                ],
                "className": "Modal",
                "closeTimeoutMS": 0,
                "contentLabel": "Settings",
                "isOpen": false,
                "onRequestClose": [Function],
                "overlayClassName": "Overlay",
                "parentSelector": [Function],
                "portalClassName": "ReactModalPortal",
                "shouldCloseOnEsc": true,
                "shouldCloseOnOverlayClick": true,
                "shouldFocusAfterRender": true,
                "shouldReturnFocusAfterClose": true,
              },
              "refs": Object {},
              "removePortal": [Function],
              "renderPortal": [Function],
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "ariaHideApp": false,
              "bodyOpenClassName": "ReactModal__Body--open",
              "children": Array [
                <div
                  className="inside"
/>,
                <Connect(Component) />,
              ],
              "className": "Modal",
              "closeTimeoutMS": 0,
              "contentLabel": "Settings",
              "isOpen": false,
              "onRequestClose": [Function],
              "overlayClassName": "Overlay",
              "parentSelector": [Function],
              "portalClassName": "ReactModalPortal",
              "shouldCloseOnEsc": true,
              "shouldCloseOnOverlayClick": true,
              "shouldFocusAfterRender": true,
              "shouldReturnFocusAfterClose": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": ModalPortal {
                "_reactInternalFiber": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</Modal>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</Modal>,
                        },
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                      "lineNumber": 9,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="inside"
                        />
                        <Connect(Component) />
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "effectTag": 5,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": Array [
                        <div
                          className="inside"
/>,
                        <Connect(Component) />,
                      ],
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</Modal>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="inside"
                          />
                          <Connect(Component) />
</Modal>,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": <div />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": Modal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "node": <div
                        class="ReactModalPortal"
/>,
                      "portal": [Circular],
                      "portalRef": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                      },
                      "refs": Object {},
                      "removePortal": [Function],
                      "renderPortal": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": Array [
                      <div
                        className="inside"
/>,
                      <Connect(Component) />,
                    ],
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="inside"
                      />
                      <Connect(Component) />
</ModalPortal>,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 7,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 6,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <Modal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
>
                              <div
                                                            className="inside"
                              />
                              <Connect(Component) />
</Modal>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <Modal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
>
                              <div
                                                            className="inside"
                              />
                              <Connect(Component) />
</Modal>,
                          },
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div />,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 5,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": Array [
                          <div
                            className="inside"
/>,
                          <Connect(Component) />,
                        ],
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "isOpen": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "isOpen": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</Modal>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="inside"
                            />
                            <Connect(Component) />
</Modal>,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "isOpen": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "isOpen": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": Modal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "node": <div
                          class="ReactModalPortal"
/>,
                        "portal": [Circular],
                        "portalRef": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": Array [
                            <div
                              className="inside"
/>,
                            <Connect(Component) />,
                          ],
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                        },
                        "refs": Object {},
                        "removePortal": [Function],
                        "renderPortal": [Function],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": [Circular],
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_reactInternalInstance": Object {},
                "afterClose": [Function],
                "ariaAttributes": [Function],
                "buildClassName": [Function],
                "close": [Function],
                "closeWithTimeout": [Function],
                "closeWithoutTimeout": [Function],
                "contentHasFocus": [Function],
                "context": Object {},
                "focusContent": [Function],
                "handleContentOnClick": [Function],
                "handleContentOnMouseDown": [Function],
                "handleContentOnMouseUp": [Function],
                "handleKeyDown": [Function],
                "handleOverlayOnClick": [Function],
                "handleOverlayOnMouseDown": [Function],
                "moveFromContentToOverlay": null,
                "open": [Function],
                "ownerHandlesClose": [Function],
                "props": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": Array [
                    <div
                      className="inside"
/>,
                    <Connect(Component) />,
                  ],
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "refs": Object {},
                "requestClose": [Function],
                "setContentRef": [Function],
                "setOverlayRef": [Function],
                "shouldBeClosed": [Function],
                "shouldClose": null,
                "state": Object {
                  "afterOpen": false,
                  "beforeClose": false,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "ariaHideApp": false,
                "bodyOpenClassName": "ReactModal__Body--open",
                "children": Array [
                  <div
                    className="inside"
/>,
                  <Connect(Component) />,
                ],
                "className": "Modal",
                "closeTimeoutMS": 0,
                "contentLabel": "Settings",
                "defaultStyles": Object {
                  "content": Object {
                    "WebkitOverflowScrolling": "touch",
                    "background": "#fff",
                    "border": "1px solid #ccc",
                    "borderRadius": "4px",
                    "bottom": "40px",
                    "left": "40px",
                    "outline": "none",
                    "overflow": "auto",
                    "padding": "20px",
                    "position": "absolute",
                    "right": "40px",
                    "top": "40px",
                  },
                  "overlay": Object {
                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                  },
                },
                "isOpen": false,
                "onRequestClose": [Function],
                "overlayClassName": "Overlay",
                "parentSelector": [Function],
                "portalClassName": "ReactModalPortal",
                "shouldCloseOnEsc": true,
                "shouldCloseOnOverlayClick": true,
                "shouldFocusAfterRender": true,
                "shouldReturnFocusAfterClose": true,
                "style": Object {
                  "content": Object {},
                  "overlay": Object {},
                },
              },
              "ref": [Function],
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`should render modal when isOpen is true 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Unknown
    isOpen={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "isOpen": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": <div />,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Modal
          ariaHideApp={false}
          bodyOpenClassName="ReactModal__Body--open"
          className="Modal"
          closeTimeoutMS={0}
          contentLabel="Settings"
          isOpen={false}
          onRequestClose={[Function]}
          overlayClassName="Overlay"
          parentSelector={[Function]}
          portalClassName="ReactModalPortal"
          shouldCloseOnEsc={true}
          shouldCloseOnOverlayClick={true}
          shouldFocusAfterRender={true}
          shouldReturnFocusAfterClose={true}
>
          <div
                    className="modal-inside"
          >
                    <Connect(Component) />
          </div>
</Modal>,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": Modal {
            "_reactInternalFiber": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 5,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "isOpen": true,
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "isOpen": true,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "isOpen": true,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "capturedValue": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "capturedValue": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 32,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "isOpen": true,
                                                                      }
                        }
/>,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div />
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "callbackList": null,
                      "capturedValues": null,
                      "expirationTime": 0,
                      "first": null,
                      "hasForceUpdate": false,
                      "isInitialized": true,
                      "isProcessing": false,
                      "last": null,
                    },
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                    "lineNumber": 8,
                  },
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Modal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</Modal>,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Modal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</Modal>,
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div />,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": ModalPortal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "afterClose": [Function],
                    "ariaAttributes": [Function],
                    "buildClassName": [Function],
                    "close": [Function],
                    "closeWithTimeout": [Function],
                    "closeWithoutTimeout": [Function],
                    "contentHasFocus": [Function],
                    "context": Object {},
                    "focusContent": [Function],
                    "handleContentOnClick": [Function],
                    "handleContentOnMouseDown": [Function],
                    "handleContentOnMouseUp": [Function],
                    "handleKeyDown": [Function],
                    "handleOverlayOnClick": [Function],
                    "handleOverlayOnMouseDown": [Function],
                    "moveFromContentToOverlay": null,
                    "open": [Function],
                    "ownerHandlesClose": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "refs": Object {},
                    "requestClose": [Function],
                    "setContentRef": [Function],
                    "setOverlayRef": [Function],
                    "shouldBeClosed": [Function],
                    "shouldClose": null,
                    "state": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "isOpen": true,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "isOpen": true,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 4,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "isOpen": true,
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "isOpen": true,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "isOpen": true,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 1,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 1,
                        "first": Object {
                          "callback": null,
                          "capturedValue": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "hasForceUpdate": false,
                        "isInitialized": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "capturedValue": null,
                          "expirationTime": 1,
                          "isForced": false,
                          "isReplace": false,
                          "next": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 32,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "isOpen": true,
                                                                      }
                        }
/>,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div />
</div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "callbackList": null,
                      "capturedValues": null,
                      "expirationTime": 0,
                      "first": null,
                      "hasForceUpdate": false,
                      "isInitialized": true,
                      "isProcessing": false,
                      "last": null,
                    },
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": Object {
                "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                "lineNumber": 9,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": ModalPortal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "afterClose": [Function],
                    "ariaAttributes": [Function],
                    "buildClassName": [Function],
                    "close": [Function],
                    "closeWithTimeout": [Function],
                    "closeWithoutTimeout": [Function],
                    "contentHasFocus": [Function],
                    "context": Object {},
                    "focusContent": [Function],
                    "handleContentOnClick": [Function],
                    "handleContentOnMouseDown": [Function],
                    "handleContentOnMouseUp": [Function],
                    "handleKeyDown": [Function],
                    "handleOverlayOnClick": [Function],
                    "handleOverlayOnMouseDown": [Function],
                    "moveFromContentToOverlay": null,
                    "open": [Function],
                    "ownerHandlesClose": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "refs": Object {},
                    "requestClose": [Function],
                    "setContentRef": [Function],
                    "setOverlayRef": [Function],
                    "shouldBeClosed": [Function],
                    "shouldClose": null,
                    "state": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": ModalPortal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "afterClose": [Function],
                    "ariaAttributes": [Function],
                    "buildClassName": [Function],
                    "close": [Function],
                    "closeWithTimeout": [Function],
                    "closeWithoutTimeout": [Function],
                    "contentHasFocus": [Function],
                    "context": Object {},
                    "focusContent": [Function],
                    "handleContentOnClick": [Function],
                    "handleContentOnMouseDown": [Function],
                    "handleContentOnMouseUp": [Function],
                    "handleKeyDown": [Function],
                    "handleOverlayOnClick": [Function],
                    "handleOverlayOnMouseDown": [Function],
                    "moveFromContentToOverlay": null,
                    "open": [Function],
                    "ownerHandlesClose": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "refs": Object {},
                    "requestClose": [Function],
                    "setContentRef": [Function],
                    "setOverlayRef": [Function],
                    "shouldBeClosed": [Function],
                    "shouldClose": null,
                    "state": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "index": 0,
                "key": null,
                "lastEffect": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": ModalPortal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "afterClose": [Function],
                    "ariaAttributes": [Function],
                    "buildClassName": [Function],
                    "close": [Function],
                    "closeWithTimeout": [Function],
                    "closeWithoutTimeout": [Function],
                    "contentHasFocus": [Function],
                    "context": Object {},
                    "focusContent": [Function],
                    "handleContentOnClick": [Function],
                    "handleContentOnMouseDown": [Function],
                    "handleContentOnMouseUp": [Function],
                    "handleKeyDown": [Function],
                    "handleOverlayOnClick": [Function],
                    "handleOverlayOnMouseDown": [Function],
                    "moveFromContentToOverlay": null,
                    "open": [Function],
                    "ownerHandlesClose": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "refs": Object {},
                    "requestClose": [Function],
                    "setContentRef": [Function],
                    "setOverlayRef": [Function],
                    "shouldBeClosed": [Function],
                    "shouldClose": null,
                    "state": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "memoizedProps": <ModalPortal
                  ariaHideApp={false}
                  bodyOpenClassName="ReactModal__Body--open"
                  className="Modal"
                  closeTimeoutMS={0}
                  contentLabel="Settings"
                  defaultStyles={
                                    Object {
                                                      "content": Object {
                                                        "WebkitOverflowScrolling": "touch",
                                                        "background": "#fff",
                                                        "border": "1px solid #ccc",
                                                        "borderRadius": "4px",
                                                        "bottom": "40px",
                                                        "left": "40px",
                                                        "outline": "none",
                                                        "overflow": "auto",
                                                        "padding": "20px",
                                                        "position": "absolute",
                                                        "right": "40px",
                                                        "top": "40px",
                                                      },
                                                      "overlay": Object {
                                                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                        "bottom": 0,
                                                        "left": 0,
                                                        "position": "fixed",
                                                        "right": 0,
                                                        "top": 0,
                                                      },
                                                    }
                  }
                  isOpen={false}
                  onRequestClose={[Function]}
                  overlayClassName="Overlay"
                  parentSelector={[Function]}
                  portalClassName="ReactModalPortal"
                  shouldCloseOnEsc={true}
                  shouldCloseOnOverlayClick={true}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  style={
                                    Object {
                                                      "content": Object {},
                                                      "overlay": Object {},
                                                    }
                  }
>
                  <div
                                    className="modal-inside"
                  >
                                    <Connect(Component) />
                  </div>
</ModalPortal>,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": <ModalPortal
                  ariaHideApp={false}
                  bodyOpenClassName="ReactModal__Body--open"
                  className="Modal"
                  closeTimeoutMS={0}
                  contentLabel="Settings"
                  defaultStyles={
                                    Object {
                                                      "content": Object {
                                                        "WebkitOverflowScrolling": "touch",
                                                        "background": "#fff",
                                                        "border": "1px solid #ccc",
                                                        "borderRadius": "4px",
                                                        "bottom": "40px",
                                                        "left": "40px",
                                                        "outline": "none",
                                                        "overflow": "auto",
                                                        "padding": "20px",
                                                        "position": "absolute",
                                                        "right": "40px",
                                                        "top": "40px",
                                                      },
                                                      "overlay": Object {
                                                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                        "bottom": 0,
                                                        "left": 0,
                                                        "position": "fixed",
                                                        "right": 0,
                                                        "top": 0,
                                                      },
                                                    }
                  }
                  isOpen={false}
                  onRequestClose={[Function]}
                  overlayClassName="Overlay"
                  parentSelector={[Function]}
                  portalClassName="ReactModalPortal"
                  shouldCloseOnEsc={true}
                  shouldCloseOnOverlayClick={true}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  style={
                                    Object {
                                                      "content": Object {},
                                                      "overlay": Object {},
                                                    }
                  }
>
                  <div
                                    className="modal-inside"
                  >
                                    <Connect(Component) />
                  </div>
</ModalPortal>,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div
                    class="ReactModalPortal"
/>,
                  "implementation": null,
                  "pendingChildren": null,
                },
                "tag": 4,
                "type": null,
                "updateQueue": null,
              },
              "effectTag": 5,
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 133,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": <div
                    className="modal-inside"
>
                    <Connect(Component) />
</div>,
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "memoizedState": Object {
                  "afterOpen": false,
                  "beforeClose": false,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": <div
                    className="modal-inside"
>
                    <Connect(Component) />
</div>,
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "ref": [Function],
                "return": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="modal-inside"
                    >
                                        <Connect(Component) />
                    </div>
</ModalPortal>,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="modal-inside"
                    >
                                        <Connect(Component) />
                    </div>
</ModalPortal>,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div
                      class="ReactModalPortal"
/>,
                    "implementation": null,
                    "pendingChildren": null,
                  },
                  "tag": 4,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": ModalPortal {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "afterClose": [Function],
                  "ariaAttributes": [Function],
                  "buildClassName": [Function],
                  "close": [Function],
                  "closeWithTimeout": [Function],
                  "closeWithoutTimeout": [Function],
                  "contentHasFocus": [Function],
                  "context": Object {},
                  "focusContent": [Function],
                  "handleContentOnClick": [Function],
                  "handleContentOnMouseDown": [Function],
                  "handleContentOnMouseUp": [Function],
                  "handleKeyDown": [Function],
                  "handleOverlayOnClick": [Function],
                  "handleOverlayOnMouseDown": [Function],
                  "moveFromContentToOverlay": null,
                  "open": [Function],
                  "ownerHandlesClose": [Function],
                  "props": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "refs": Object {},
                  "requestClose": [Function],
                  "setContentRef": [Function],
                  "setOverlayRef": [Function],
                  "shouldBeClosed": [Function],
                  "shouldClose": null,
                  "state": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 133,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": <div
                    className="modal-inside"
>
                    <Connect(Component) />
</div>,
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "memoizedState": Object {
                  "afterOpen": false,
                  "beforeClose": false,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": <div
                    className="modal-inside"
>
                    <Connect(Component) />
</div>,
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "ref": [Function],
                "return": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="modal-inside"
                    >
                                        <Connect(Component) />
                    </div>
</ModalPortal>,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="modal-inside"
                    >
                                        <Connect(Component) />
                    </div>
</ModalPortal>,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div
                      class="ReactModalPortal"
/>,
                    "implementation": null,
                    "pendingChildren": null,
                  },
                  "tag": 4,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": ModalPortal {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "afterClose": [Function],
                  "ariaAttributes": [Function],
                  "buildClassName": [Function],
                  "close": [Function],
                  "closeWithTimeout": [Function],
                  "closeWithoutTimeout": [Function],
                  "contentHasFocus": [Function],
                  "context": Object {},
                  "focusContent": [Function],
                  "handleContentOnClick": [Function],
                  "handleContentOnMouseDown": [Function],
                  "handleContentOnMouseUp": [Function],
                  "handleKeyDown": [Function],
                  "handleOverlayOnClick": [Function],
                  "handleOverlayOnMouseDown": [Function],
                  "moveFromContentToOverlay": null,
                  "open": [Function],
                  "ownerHandlesClose": [Function],
                  "props": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "refs": Object {},
                  "requestClose": [Function],
                  "setContentRef": [Function],
                  "setOverlayRef": [Function],
                  "shouldBeClosed": [Function],
                  "shouldClose": null,
                  "state": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "memoizedProps": Object {
                "ariaHideApp": false,
                "bodyOpenClassName": "ReactModal__Body--open",
                "children": <div
                  className="modal-inside"
>
                  <Connect(Component) />
</div>,
                "className": "Modal",
                "closeTimeoutMS": 0,
                "contentLabel": "Settings",
                "isOpen": false,
                "onRequestClose": [Function],
                "overlayClassName": "Overlay",
                "parentSelector": [Function],
                "portalClassName": "ReactModalPortal",
                "shouldCloseOnEsc": true,
                "shouldCloseOnOverlayClick": true,
                "shouldFocusAfterRender": true,
                "shouldReturnFocusAfterClose": true,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "ariaHideApp": false,
                "bodyOpenClassName": "ReactModal__Body--open",
                "children": <div
                  className="modal-inside"
>
                  <Connect(Component) />
</div>,
                "className": "Modal",
                "closeTimeoutMS": 0,
                "contentLabel": "Settings",
                "isOpen": false,
                "onRequestClose": [Function],
                "overlayClassName": "Overlay",
                "parentSelector": [Function],
                "portalClassName": "ReactModalPortal",
                "shouldCloseOnEsc": true,
                "shouldCloseOnOverlayClick": true,
                "shouldFocusAfterRender": true,
                "shouldReturnFocusAfterClose": true,
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 0,
                        "first": null,
                        "hasForceUpdate": false,
                        "isInitialized": true,
                        "isProcessing": false,
                        "last": null,
                      },
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "isOpen": true,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "isOpen": true,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 0,
                        "first": null,
                        "hasForceUpdate": false,
                        "isInitialized": true,
                        "isProcessing": false,
                        "last": null,
                      },
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                  "lineNumber": 8,
                },
                "alternate": null,
                "child": [Circular],
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": ModalPortal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "afterClose": [Function],
                    "ariaAttributes": [Function],
                    "buildClassName": [Function],
                    "close": [Function],
                    "closeWithTimeout": [Function],
                    "closeWithoutTimeout": [Function],
                    "contentHasFocus": [Function],
                    "context": Object {},
                    "focusContent": [Function],
                    "handleContentOnClick": [Function],
                    "handleContentOnMouseDown": [Function],
                    "handleContentOnMouseUp": [Function],
                    "handleKeyDown": [Function],
                    "handleOverlayOnClick": [Function],
                    "handleOverlayOnMouseDown": [Function],
                    "moveFromContentToOverlay": null,
                    "open": [Function],
                    "ownerHandlesClose": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "refs": Object {},
                    "requestClose": [Function],
                    "setContentRef": [Function],
                    "setOverlayRef": [Function],
                    "shouldBeClosed": [Function],
                    "shouldClose": null,
                    "state": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Modal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
>
                    <div
                                        className="modal-inside"
                    >
                                        <Connect(Component) />
                    </div>
</Modal>,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Modal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
>
                    <div
                                        className="modal-inside"
                    >
                                        <Connect(Component) />
                    </div>
</Modal>,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 0,
                        "first": null,
                        "hasForceUpdate": false,
                        "isInitialized": true,
                        "isProcessing": false,
                        "last": null,
                      },
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "isOpen": true,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "isOpen": true,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 0,
                        "first": null,
                        "hasForceUpdate": false,
                        "isInitialized": true,
                        "isProcessing": false,
                        "last": null,
                      },
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": <div />,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": [Circular],
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_reactInternalInstance": Object {},
            "context": Object {},
            "node": <div
              class="ReactModalPortal"
/>,
            "portal": ModalPortal {
              "_reactInternalFiber": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</Modal>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</Modal>,
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "isOpen": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "isOpen": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                    "lineNumber": 9,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "effectTag": 5,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                      "lineNumber": 8,
                    },
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Modal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</Modal>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Modal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</Modal>,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": <div />,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": [Circular],
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 133,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": <div
                    className="modal-inside"
>
                    <Connect(Component) />
</div>,
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "memoizedState": Object {
                  "afterOpen": false,
                  "beforeClose": false,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": <div
                    className="modal-inside"
>
                    <Connect(Component) />
</div>,
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "ref": [Function],
                "return": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="modal-inside"
                    >
                                        <Connect(Component) />
                    </div>
</ModalPortal>,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="modal-inside"
                    >
                                        <Connect(Component) />
                    </div>
</ModalPortal>,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</Modal>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</Modal>,
                        },
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                      "lineNumber": 9,
                    },
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 5,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</Modal>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</Modal>,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": <div />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": [Circular],
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div
                      class="ReactModalPortal"
/>,
                    "implementation": null,
                    "pendingChildren": null,
                  },
                  "tag": 4,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": [Circular],
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "afterClose": [Function],
              "ariaAttributes": [Function],
              "buildClassName": [Function],
              "close": [Function],
              "closeWithTimeout": [Function],
              "closeWithoutTimeout": [Function],
              "contentHasFocus": [Function],
              "context": Object {},
              "focusContent": [Function],
              "handleContentOnClick": [Function],
              "handleContentOnMouseDown": [Function],
              "handleContentOnMouseUp": [Function],
              "handleKeyDown": [Function],
              "handleOverlayOnClick": [Function],
              "handleOverlayOnMouseDown": [Function],
              "moveFromContentToOverlay": null,
              "open": [Function],
              "ownerHandlesClose": [Function],
              "props": Object {
                "ariaHideApp": false,
                "bodyOpenClassName": "ReactModal__Body--open",
                "children": <div
                  className="modal-inside"
>
                  <Connect(Component) />
</div>,
                "className": "Modal",
                "closeTimeoutMS": 0,
                "contentLabel": "Settings",
                "defaultStyles": Object {
                  "content": Object {
                    "WebkitOverflowScrolling": "touch",
                    "background": "#fff",
                    "border": "1px solid #ccc",
                    "borderRadius": "4px",
                    "bottom": "40px",
                    "left": "40px",
                    "outline": "none",
                    "overflow": "auto",
                    "padding": "20px",
                    "position": "absolute",
                    "right": "40px",
                    "top": "40px",
                  },
                  "overlay": Object {
                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                  },
                },
                "isOpen": false,
                "onRequestClose": [Function],
                "overlayClassName": "Overlay",
                "parentSelector": [Function],
                "portalClassName": "ReactModalPortal",
                "shouldCloseOnEsc": true,
                "shouldCloseOnOverlayClick": true,
                "shouldFocusAfterRender": true,
                "shouldReturnFocusAfterClose": true,
                "style": Object {
                  "content": Object {},
                  "overlay": Object {},
                },
              },
              "refs": Object {},
              "requestClose": [Function],
              "setContentRef": [Function],
              "setOverlayRef": [Function],
              "shouldBeClosed": [Function],
              "shouldClose": null,
              "state": Object {
                "afterOpen": false,
                "beforeClose": false,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "portalRef": [Function],
            "props": Object {
              "ariaHideApp": false,
              "bodyOpenClassName": "ReactModal__Body--open",
              "children": <div
                className="modal-inside"
>
                <Connect(Component) />
</div>,
              "className": "Modal",
              "closeTimeoutMS": 0,
              "contentLabel": "Settings",
              "isOpen": false,
              "onRequestClose": [Function],
              "overlayClassName": "Overlay",
              "parentSelector": [Function],
              "portalClassName": "ReactModalPortal",
              "shouldCloseOnEsc": true,
              "shouldCloseOnOverlayClick": true,
              "shouldFocusAfterRender": true,
              "shouldReturnFocusAfterClose": true,
            },
            "refs": Object {},
            "removePortal": [Function],
            "renderPortal": [Function],
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "ariaHideApp": false,
            "bodyOpenClassName": "ReactModal__Body--open",
            "children": <div
              className="modal-inside"
>
              <Connect(Component) />
</div>,
            "className": "Modal",
            "closeTimeoutMS": 0,
            "contentLabel": "Settings",
            "isOpen": false,
            "onRequestClose": [Function],
            "overlayClassName": "Overlay",
            "parentSelector": [Function],
            "portalClassName": "ReactModalPortal",
            "shouldCloseOnEsc": true,
            "shouldCloseOnOverlayClick": true,
            "shouldFocusAfterRender": true,
            "shouldReturnFocusAfterClose": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": ModalPortal {
              "_reactInternalFiber": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</Modal>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</Modal>,
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <div />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "isOpen": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "isOpen": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                    "lineNumber": 9,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "effectTag": 5,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                      "lineNumber": 8,
                    },
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Modal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</Modal>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Modal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</Modal>,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": <div />,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": Modal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "node": <div
                      class="ReactModalPortal"
/>,
                    "portal": [Circular],
                    "portalRef": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "refs": Object {},
                    "removePortal": [Function],
                    "renderPortal": [Function],
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 133,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": <div
                    className="modal-inside"
>
                    <Connect(Component) />
</div>,
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "memoizedState": Object {
                  "afterOpen": false,
                  "beforeClose": false,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": <div
                    className="modal-inside"
>
                    <Connect(Component) />
</div>,
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "ref": [Function],
                "return": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="modal-inside"
                    >
                                        <Connect(Component) />
                    </div>
</ModalPortal>,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="modal-inside"
                    >
                                        <Connect(Component) />
                    </div>
</ModalPortal>,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</Modal>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</Modal>,
                        },
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                      "lineNumber": 9,
                    },
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 5,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</Modal>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</Modal>,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": <div />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": Modal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "node": <div
                        class="ReactModalPortal"
/>,
                      "portal": [Circular],
                      "portalRef": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                      },
                      "refs": Object {},
                      "removePortal": [Function],
                      "renderPortal": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div
                      class="ReactModalPortal"
/>,
                    "implementation": null,
                    "pendingChildren": null,
                  },
                  "tag": 4,
                  "type": null,
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": [Circular],
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "afterClose": [Function],
              "ariaAttributes": [Function],
              "buildClassName": [Function],
              "close": [Function],
              "closeWithTimeout": [Function],
              "closeWithoutTimeout": [Function],
              "contentHasFocus": [Function],
              "context": Object {},
              "focusContent": [Function],
              "handleContentOnClick": [Function],
              "handleContentOnMouseDown": [Function],
              "handleContentOnMouseUp": [Function],
              "handleKeyDown": [Function],
              "handleOverlayOnClick": [Function],
              "handleOverlayOnMouseDown": [Function],
              "moveFromContentToOverlay": null,
              "open": [Function],
              "ownerHandlesClose": [Function],
              "props": Object {
                "ariaHideApp": false,
                "bodyOpenClassName": "ReactModal__Body--open",
                "children": <div
                  className="modal-inside"
>
                  <Connect(Component) />
</div>,
                "className": "Modal",
                "closeTimeoutMS": 0,
                "contentLabel": "Settings",
                "defaultStyles": Object {
                  "content": Object {
                    "WebkitOverflowScrolling": "touch",
                    "background": "#fff",
                    "border": "1px solid #ccc",
                    "borderRadius": "4px",
                    "bottom": "40px",
                    "left": "40px",
                    "outline": "none",
                    "overflow": "auto",
                    "padding": "20px",
                    "position": "absolute",
                    "right": "40px",
                    "top": "40px",
                  },
                  "overlay": Object {
                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                  },
                },
                "isOpen": false,
                "onRequestClose": [Function],
                "overlayClassName": "Overlay",
                "parentSelector": [Function],
                "portalClassName": "ReactModalPortal",
                "shouldCloseOnEsc": true,
                "shouldCloseOnOverlayClick": true,
                "shouldFocusAfterRender": true,
                "shouldReturnFocusAfterClose": true,
                "style": Object {
                  "content": Object {},
                  "overlay": Object {},
                },
              },
              "refs": Object {},
              "requestClose": [Function],
              "setContentRef": [Function],
              "setOverlayRef": [Function],
              "shouldBeClosed": [Function],
              "shouldClose": null,
              "state": Object {
                "afterOpen": false,
                "beforeClose": false,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "ariaHideApp": false,
              "bodyOpenClassName": "ReactModal__Body--open",
              "children": <div
                className="modal-inside"
>
                <Connect(Component) />
</div>,
              "className": "Modal",
              "closeTimeoutMS": 0,
              "contentLabel": "Settings",
              "defaultStyles": Object {
                "content": Object {
                  "WebkitOverflowScrolling": "touch",
                  "background": "#fff",
                  "border": "1px solid #ccc",
                  "borderRadius": "4px",
                  "bottom": "40px",
                  "left": "40px",
                  "outline": "none",
                  "overflow": "auto",
                  "padding": "20px",
                  "position": "absolute",
                  "right": "40px",
                  "top": "40px",
                },
                "overlay": Object {
                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                },
              },
              "isOpen": false,
              "onRequestClose": [Function],
              "overlayClassName": "Overlay",
              "parentSelector": [Function],
              "portalClassName": "ReactModalPortal",
              "shouldCloseOnEsc": true,
              "shouldCloseOnOverlayClick": true,
              "shouldFocusAfterRender": true,
              "shouldReturnFocusAfterClose": true,
              "style": Object {
                "content": Object {},
                "overlay": Object {},
              },
            },
            "ref": [Function],
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "isOpen": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": <div />,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Modal
            ariaHideApp={false}
            bodyOpenClassName="ReactModal__Body--open"
            className="Modal"
            closeTimeoutMS={0}
            contentLabel="Settings"
            isOpen={false}
            onRequestClose={[Function]}
            overlayClassName="Overlay"
            parentSelector={[Function]}
            portalClassName="ReactModalPortal"
            shouldCloseOnEsc={true}
            shouldCloseOnOverlayClick={true}
            shouldFocusAfterRender={true}
            shouldReturnFocusAfterClose={true}
>
            <div
                        className="modal-inside"
            >
                        <Connect(Component) />
            </div>
</Modal>,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": Modal {
              "_reactInternalFiber": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 5,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 0,
                        "first": null,
                        "hasForceUpdate": false,
                        "isInitialized": true,
                        "isProcessing": false,
                        "last": null,
                      },
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 6,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                      "lineNumber": 8,
                    },
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Modal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</Modal>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Modal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</Modal>,
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div />,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "isOpen": true,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "isOpen": true,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 4,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "isOpen": true,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 1,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 1,
                          "first": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "hasForceUpdate": false,
                          "isInitialized": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "capturedValue": null,
                            "expirationTime": 1,
                            "isForced": false,
                            "isReplace": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "isOpen": true,
                                                                            }
                          }
/>,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div />
</div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "remainingExpirationTime": 0,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "callbackList": null,
                        "capturedValues": null,
                        "expirationTime": 0,
                        "first": null,
                        "hasForceUpdate": false,
                        "isInitialized": true,
                        "isProcessing": false,
                        "last": null,
                      },
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": Object {
                  "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                  "lineNumber": 9,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "memoizedProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="modal-inside"
                    >
                                        <Connect(Component) />
                    </div>
</ModalPortal>,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": <ModalPortal
                    ariaHideApp={false}
                    bodyOpenClassName="ReactModal__Body--open"
                    className="Modal"
                    closeTimeoutMS={0}
                    contentLabel="Settings"
                    defaultStyles={
                                        Object {
                                                            "content": Object {
                                                              "WebkitOverflowScrolling": "touch",
                                                              "background": "#fff",
                                                              "border": "1px solid #ccc",
                                                              "borderRadius": "4px",
                                                              "bottom": "40px",
                                                              "left": "40px",
                                                              "outline": "none",
                                                              "overflow": "auto",
                                                              "padding": "20px",
                                                              "position": "absolute",
                                                              "right": "40px",
                                                              "top": "40px",
                                                            },
                                                            "overlay": Object {
                                                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "position": "fixed",
                                                              "right": 0,
                                                              "top": 0,
                                                            },
                                                          }
                    }
                    isOpen={false}
                    onRequestClose={[Function]}
                    overlayClassName="Overlay"
                    parentSelector={[Function]}
                    portalClassName="ReactModalPortal"
                    shouldCloseOnEsc={true}
                    shouldCloseOnOverlayClick={true}
                    shouldFocusAfterRender={true}
                    shouldReturnFocusAfterClose={true}
                    style={
                                        Object {
                                                            "content": Object {},
                                                            "overlay": Object {},
                                                          }
                    }
>
                    <div
                                        className="modal-inside"
                    >
                                        <Connect(Component) />
                    </div>
</ModalPortal>,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div
                      class="ReactModalPortal"
/>,
                    "implementation": null,
                    "pendingChildren": null,
                  },
                  "tag": 4,
                  "type": null,
                  "updateQueue": null,
                },
                "effectTag": 5,
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": ModalPortal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "afterClose": [Function],
                    "ariaAttributes": [Function],
                    "buildClassName": [Function],
                    "close": [Function],
                    "closeWithTimeout": [Function],
                    "closeWithoutTimeout": [Function],
                    "contentHasFocus": [Function],
                    "context": Object {},
                    "focusContent": [Function],
                    "handleContentOnClick": [Function],
                    "handleContentOnMouseDown": [Function],
                    "handleContentOnMouseUp": [Function],
                    "handleKeyDown": [Function],
                    "handleOverlayOnClick": [Function],
                    "handleOverlayOnMouseDown": [Function],
                    "moveFromContentToOverlay": null,
                    "open": [Function],
                    "ownerHandlesClose": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "refs": Object {},
                    "requestClose": [Function],
                    "setContentRef": [Function],
                    "setOverlayRef": [Function],
                    "shouldBeClosed": [Function],
                    "shouldClose": null,
                    "state": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "index": 0,
                "key": null,
                "lastEffect": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": ModalPortal {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "afterClose": [Function],
                    "ariaAttributes": [Function],
                    "buildClassName": [Function],
                    "close": [Function],
                    "closeWithTimeout": [Function],
                    "closeWithoutTimeout": [Function],
                    "contentHasFocus": [Function],
                    "context": Object {},
                    "focusContent": [Function],
                    "handleContentOnClick": [Function],
                    "handleContentOnMouseDown": [Function],
                    "handleContentOnMouseUp": [Function],
                    "handleKeyDown": [Function],
                    "handleOverlayOnClick": [Function],
                    "handleOverlayOnMouseDown": [Function],
                    "moveFromContentToOverlay": null,
                    "open": [Function],
                    "ownerHandlesClose": [Function],
                    "props": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "refs": Object {},
                    "requestClose": [Function],
                    "setContentRef": [Function],
                    "setOverlayRef": [Function],
                    "shouldBeClosed": [Function],
                    "shouldClose": null,
                    "state": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "memoizedProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": <div
                    className="modal-inside"
>
                    <Connect(Component) />
</div>,
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": <div
                    className="modal-inside"
>
                    <Connect(Component) />
</div>,
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 6,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": FiberNode {
                          "_debugID": 9,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 133,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "memoizedState": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "ref": [Function],
                          "return": FiberNode {
                            "_debugID": 8,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="modal-inside"
                              >
                                                            <Connect(Component) />
                              </div>
</ModalPortal>,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="modal-inside"
                              >
                                                            <Connect(Component) />
                              </div>
</ModalPortal>,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div
                                class="ReactModalPortal"
/>,
                              "implementation": null,
                              "pendingChildren": null,
                            },
                            "tag": 4,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": ModalPortal {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "afterClose": [Function],
                            "ariaAttributes": [Function],
                            "buildClassName": [Function],
                            "close": [Function],
                            "closeWithTimeout": [Function],
                            "closeWithoutTimeout": [Function],
                            "contentHasFocus": [Function],
                            "context": Object {},
                            "focusContent": [Function],
                            "handleContentOnClick": [Function],
                            "handleContentOnMouseDown": [Function],
                            "handleContentOnMouseUp": [Function],
                            "handleKeyDown": [Function],
                            "handleOverlayOnClick": [Function],
                            "handleOverlayOnMouseDown": [Function],
                            "moveFromContentToOverlay": null,
                            "open": [Function],
                            "ownerHandlesClose": [Function],
                            "props": Object {
                              "ariaHideApp": false,
                              "bodyOpenClassName": "ReactModal__Body--open",
                              "children": <div
                                className="modal-inside"
>
                                <Connect(Component) />
</div>,
                              "className": "Modal",
                              "closeTimeoutMS": 0,
                              "contentLabel": "Settings",
                              "defaultStyles": Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              },
                              "isOpen": false,
                              "onRequestClose": [Function],
                              "overlayClassName": "Overlay",
                              "parentSelector": [Function],
                              "portalClassName": "ReactModalPortal",
                              "shouldCloseOnEsc": true,
                              "shouldCloseOnOverlayClick": true,
                              "shouldFocusAfterRender": true,
                              "shouldReturnFocusAfterClose": true,
                              "style": Object {
                                "content": Object {},
                                "overlay": Object {},
                              },
                            },
                            "refs": Object {},
                            "requestClose": [Function],
                            "setContentRef": [Function],
                            "setOverlayRef": [Function],
                            "shouldBeClosed": [Function],
                            "shouldClose": null,
                            "state": Object {
                              "afterOpen": false,
                              "beforeClose": false,
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "isOpen": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "isOpen": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": FiberNode {
                          "_debugID": 9,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 133,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "memoizedState": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "ref": [Function],
                          "return": FiberNode {
                            "_debugID": 8,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="modal-inside"
                              >
                                                            <Connect(Component) />
                              </div>
</ModalPortal>,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="modal-inside"
                              >
                                                            <Connect(Component) />
                              </div>
</ModalPortal>,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div
                                class="ReactModalPortal"
/>,
                              "implementation": null,
                              "pendingChildren": null,
                            },
                            "tag": 4,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": ModalPortal {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "afterClose": [Function],
                            "ariaAttributes": [Function],
                            "buildClassName": [Function],
                            "close": [Function],
                            "closeWithTimeout": [Function],
                            "closeWithoutTimeout": [Function],
                            "contentHasFocus": [Function],
                            "context": Object {},
                            "focusContent": [Function],
                            "handleContentOnClick": [Function],
                            "handleContentOnMouseDown": [Function],
                            "handleContentOnMouseUp": [Function],
                            "handleKeyDown": [Function],
                            "handleOverlayOnClick": [Function],
                            "handleOverlayOnMouseDown": [Function],
                            "moveFromContentToOverlay": null,
                            "open": [Function],
                            "ownerHandlesClose": [Function],
                            "props": Object {
                              "ariaHideApp": false,
                              "bodyOpenClassName": "ReactModal__Body--open",
                              "children": <div
                                className="modal-inside"
>
                                <Connect(Component) />
</div>,
                              "className": "Modal",
                              "closeTimeoutMS": 0,
                              "contentLabel": "Settings",
                              "defaultStyles": Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              },
                              "isOpen": false,
                              "onRequestClose": [Function],
                              "overlayClassName": "Overlay",
                              "parentSelector": [Function],
                              "portalClassName": "ReactModalPortal",
                              "shouldCloseOnEsc": true,
                              "shouldCloseOnOverlayClick": true,
                              "shouldFocusAfterRender": true,
                              "shouldReturnFocusAfterClose": true,
                              "style": Object {
                                "content": Object {},
                                "overlay": Object {},
                              },
                            },
                            "refs": Object {},
                            "requestClose": [Function],
                            "setContentRef": [Function],
                            "setOverlayRef": [Function],
                            "shouldBeClosed": [Function],
                            "shouldClose": null,
                            "state": Object {
                              "afterOpen": false,
                              "beforeClose": false,
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                    "lineNumber": 8,
                  },
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 133,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "memoizedState": Object {
                      "afterOpen": false,
                      "beforeClose": false,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "defaultStyles": Object {
                        "content": Object {
                          "WebkitOverflowScrolling": "touch",
                          "background": "#fff",
                          "border": "1px solid #ccc",
                          "borderRadius": "4px",
                          "bottom": "40px",
                          "left": "40px",
                          "outline": "none",
                          "overflow": "auto",
                          "padding": "20px",
                          "position": "absolute",
                          "right": "40px",
                          "top": "40px",
                        },
                        "overlay": Object {
                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                        },
                      },
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                      "style": Object {
                        "content": Object {},
                        "overlay": Object {},
                      },
                    },
                    "ref": [Function],
                    "return": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": ModalPortal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "afterClose": [Function],
                      "ariaAttributes": [Function],
                      "buildClassName": [Function],
                      "close": [Function],
                      "closeWithTimeout": [Function],
                      "closeWithoutTimeout": [Function],
                      "contentHasFocus": [Function],
                      "context": Object {},
                      "focusContent": [Function],
                      "handleContentOnClick": [Function],
                      "handleContentOnMouseDown": [Function],
                      "handleContentOnMouseUp": [Function],
                      "handleKeyDown": [Function],
                      "handleOverlayOnClick": [Function],
                      "handleOverlayOnMouseDown": [Function],
                      "moveFromContentToOverlay": null,
                      "open": [Function],
                      "ownerHandlesClose": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "refs": Object {},
                      "requestClose": [Function],
                      "setContentRef": [Function],
                      "setOverlayRef": [Function],
                      "shouldBeClosed": [Function],
                      "shouldClose": null,
                      "state": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Modal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</Modal>,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Modal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</Modal>,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 5,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": FiberNode {
                          "_debugID": 9,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 133,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "memoizedState": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "ref": [Function],
                          "return": FiberNode {
                            "_debugID": 8,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="modal-inside"
                              >
                                                            <Connect(Component) />
                              </div>
</ModalPortal>,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="modal-inside"
                              >
                                                            <Connect(Component) />
                              </div>
</ModalPortal>,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div
                                class="ReactModalPortal"
/>,
                              "implementation": null,
                              "pendingChildren": null,
                            },
                            "tag": 4,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": ModalPortal {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "afterClose": [Function],
                            "ariaAttributes": [Function],
                            "buildClassName": [Function],
                            "close": [Function],
                            "closeWithTimeout": [Function],
                            "closeWithoutTimeout": [Function],
                            "contentHasFocus": [Function],
                            "context": Object {},
                            "focusContent": [Function],
                            "handleContentOnClick": [Function],
                            "handleContentOnMouseDown": [Function],
                            "handleContentOnMouseUp": [Function],
                            "handleKeyDown": [Function],
                            "handleOverlayOnClick": [Function],
                            "handleOverlayOnMouseDown": [Function],
                            "moveFromContentToOverlay": null,
                            "open": [Function],
                            "ownerHandlesClose": [Function],
                            "props": Object {
                              "ariaHideApp": false,
                              "bodyOpenClassName": "ReactModal__Body--open",
                              "children": <div
                                className="modal-inside"
>
                                <Connect(Component) />
</div>,
                              "className": "Modal",
                              "closeTimeoutMS": 0,
                              "contentLabel": "Settings",
                              "defaultStyles": Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              },
                              "isOpen": false,
                              "onRequestClose": [Function],
                              "overlayClassName": "Overlay",
                              "parentSelector": [Function],
                              "portalClassName": "ReactModalPortal",
                              "shouldCloseOnEsc": true,
                              "shouldCloseOnOverlayClick": true,
                              "shouldFocusAfterRender": true,
                              "shouldReturnFocusAfterClose": true,
                              "style": Object {
                                "content": Object {},
                                "overlay": Object {},
                              },
                            },
                            "refs": Object {},
                            "requestClose": [Function],
                            "setContentRef": [Function],
                            "setOverlayRef": [Function],
                            "shouldBeClosed": [Function],
                            "shouldClose": null,
                            "state": Object {
                              "afterOpen": false,
                              "beforeClose": false,
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 133,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "memoizedState": Object {
                        "afterOpen": false,
                        "beforeClose": false,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "defaultStyles": Object {
                          "content": Object {
                            "WebkitOverflowScrolling": "touch",
                            "background": "#fff",
                            "border": "1px solid #ccc",
                            "borderRadius": "4px",
                            "bottom": "40px",
                            "left": "40px",
                            "outline": "none",
                            "overflow": "auto",
                            "padding": "20px",
                            "position": "absolute",
                            "right": "40px",
                            "top": "40px",
                          },
                          "overlay": Object {
                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                          },
                        },
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                        "style": Object {
                          "content": Object {},
                          "overlay": Object {},
                        },
                      },
                      "ref": [Function],
                      "return": FiberNode {
                        "_debugID": 8,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": <ModalPortal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          defaultStyles={
                                                    Object {
                                                                              "content": Object {
                                                                                "WebkitOverflowScrolling": "touch",
                                                                                "background": "#fff",
                                                                                "border": "1px solid #ccc",
                                                                                "borderRadius": "4px",
                                                                                "bottom": "40px",
                                                                                "left": "40px",
                                                                                "outline": "none",
                                                                                "overflow": "auto",
                                                                                "padding": "20px",
                                                                                "position": "absolute",
                                                                                "right": "40px",
                                                                                "top": "40px",
                                                                              },
                                                                              "overlay": Object {
                                                                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                "bottom": 0,
                                                                                "left": 0,
                                                                                "position": "fixed",
                                                                                "right": 0,
                                                                                "top": 0,
                                                                              },
                                                                            }
                          }
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
                          style={
                                                    Object {
                                                                              "content": Object {},
                                                                              "overlay": Object {},
                                                                            }
                          }
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</ModalPortal>,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div
                            class="ReactModalPortal"
/>,
                          "implementation": null,
                          "pendingChildren": null,
                        },
                        "tag": 4,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": ModalPortal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "afterClose": [Function],
                        "ariaAttributes": [Function],
                        "buildClassName": [Function],
                        "close": [Function],
                        "closeWithTimeout": [Function],
                        "closeWithoutTimeout": [Function],
                        "contentHasFocus": [Function],
                        "context": Object {},
                        "focusContent": [Function],
                        "handleContentOnClick": [Function],
                        "handleContentOnMouseDown": [Function],
                        "handleContentOnMouseUp": [Function],
                        "handleKeyDown": [Function],
                        "handleOverlayOnClick": [Function],
                        "handleOverlayOnMouseDown": [Function],
                        "moveFromContentToOverlay": null,
                        "open": [Function],
                        "ownerHandlesClose": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "refs": Object {},
                        "requestClose": [Function],
                        "setContentRef": [Function],
                        "setOverlayRef": [Function],
                        "shouldBeClosed": [Function],
                        "shouldClose": null,
                        "state": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "isOpen": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "isOpen": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 4,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 9,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 133,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "memoizedState": Object {
                          "afterOpen": false,
                          "beforeClose": false,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "defaultStyles": Object {
                            "content": Object {
                              "WebkitOverflowScrolling": "touch",
                              "background": "#fff",
                              "border": "1px solid #ccc",
                              "borderRadius": "4px",
                              "bottom": "40px",
                              "left": "40px",
                              "outline": "none",
                              "overflow": "auto",
                              "padding": "20px",
                              "position": "absolute",
                              "right": "40px",
                              "top": "40px",
                            },
                            "overlay": Object {
                              "backgroundColor": "rgba(255, 255, 255, 0.75)",
                              "bottom": 0,
                              "left": 0,
                              "position": "fixed",
                              "right": 0,
                              "top": 0,
                            },
                          },
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                          "style": Object {
                            "content": Object {},
                            "overlay": Object {},
                          },
                        },
                        "ref": [Function],
                        "return": FiberNode {
                          "_debugID": 8,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": <ModalPortal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            defaultStyles={
                                                        Object {
                                                                                    "content": Object {
                                                                                      "WebkitOverflowScrolling": "touch",
                                                                                      "background": "#fff",
                                                                                      "border": "1px solid #ccc",
                                                                                      "borderRadius": "4px",
                                                                                      "bottom": "40px",
                                                                                      "left": "40px",
                                                                                      "outline": "none",
                                                                                      "overflow": "auto",
                                                                                      "padding": "20px",
                                                                                      "position": "absolute",
                                                                                      "right": "40px",
                                                                                      "top": "40px",
                                                                                    },
                                                                                    "overlay": Object {
                                                                                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                      "bottom": 0,
                                                                                      "left": 0,
                                                                                      "position": "fixed",
                                                                                      "right": 0,
                                                                                      "top": 0,
                                                                                    },
                                                                                  }
                            }
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
                            style={
                                                        Object {
                                                                                    "content": Object {},
                                                                                    "overlay": Object {},
                                                                                  }
                            }
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</ModalPortal>,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div
                              class="ReactModalPortal"
/>,
                            "implementation": null,
                            "pendingChildren": null,
                          },
                          "tag": 4,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": ModalPortal {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "afterClose": [Function],
                          "ariaAttributes": [Function],
                          "buildClassName": [Function],
                          "close": [Function],
                          "closeWithTimeout": [Function],
                          "closeWithoutTimeout": [Function],
                          "contentHasFocus": [Function],
                          "context": Object {},
                          "focusContent": [Function],
                          "handleContentOnClick": [Function],
                          "handleContentOnMouseDown": [Function],
                          "handleContentOnMouseUp": [Function],
                          "handleKeyDown": [Function],
                          "handleOverlayOnClick": [Function],
                          "handleOverlayOnMouseDown": [Function],
                          "moveFromContentToOverlay": null,
                          "open": [Function],
                          "ownerHandlesClose": [Function],
                          "props": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "refs": Object {},
                          "requestClose": [Function],
                          "setContentRef": [Function],
                          "setOverlayRef": [Function],
                          "shouldBeClosed": [Function],
                          "shouldClose": null,
                          "state": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "isOpen": true,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 1,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": FiberNode {
                          "_debugID": 9,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 133,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "memoizedState": Object {
                            "afterOpen": false,
                            "beforeClose": false,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "ariaHideApp": false,
                            "bodyOpenClassName": "ReactModal__Body--open",
                            "children": <div
                              className="modal-inside"
>
                              <Connect(Component) />
</div>,
                            "className": "Modal",
                            "closeTimeoutMS": 0,
                            "contentLabel": "Settings",
                            "defaultStyles": Object {
                              "content": Object {
                                "WebkitOverflowScrolling": "touch",
                                "background": "#fff",
                                "border": "1px solid #ccc",
                                "borderRadius": "4px",
                                "bottom": "40px",
                                "left": "40px",
                                "outline": "none",
                                "overflow": "auto",
                                "padding": "20px",
                                "position": "absolute",
                                "right": "40px",
                                "top": "40px",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                "bottom": 0,
                                "left": 0,
                                "position": "fixed",
                                "right": 0,
                                "top": 0,
                              },
                            },
                            "isOpen": false,
                            "onRequestClose": [Function],
                            "overlayClassName": "Overlay",
                            "parentSelector": [Function],
                            "portalClassName": "ReactModalPortal",
                            "shouldCloseOnEsc": true,
                            "shouldCloseOnOverlayClick": true,
                            "shouldFocusAfterRender": true,
                            "shouldReturnFocusAfterClose": true,
                            "style": Object {
                              "content": Object {},
                              "overlay": Object {},
                            },
                          },
                          "ref": [Function],
                          "return": FiberNode {
                            "_debugID": 8,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="modal-inside"
                              >
                                                            <Connect(Component) />
                              </div>
</ModalPortal>,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": <ModalPortal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              defaultStyles={
                                                            Object {
                                                                                          "content": Object {
                                                                                            "WebkitOverflowScrolling": "touch",
                                                                                            "background": "#fff",
                                                                                            "border": "1px solid #ccc",
                                                                                            "borderRadius": "4px",
                                                                                            "bottom": "40px",
                                                                                            "left": "40px",
                                                                                            "outline": "none",
                                                                                            "overflow": "auto",
                                                                                            "padding": "20px",
                                                                                            "position": "absolute",
                                                                                            "right": "40px",
                                                                                            "top": "40px",
                                                                                          },
                                                                                          "overlay": Object {
                                                                                            "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                                            "bottom": 0,
                                                                                            "left": 0,
                                                                                            "position": "fixed",
                                                                                            "right": 0,
                                                                                            "top": 0,
                                                                                          },
                                                                                        }
                              }
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
                              style={
                                                            Object {
                                                                                          "content": Object {},
                                                                                          "overlay": Object {},
                                                                                        }
                              }
>
                              <div
                                                            className="modal-inside"
                              >
                                                            <Connect(Component) />
                              </div>
</ModalPortal>,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div
                                class="ReactModalPortal"
/>,
                              "implementation": null,
                              "pendingChildren": null,
                            },
                            "tag": 4,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": ModalPortal {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "afterClose": [Function],
                            "ariaAttributes": [Function],
                            "buildClassName": [Function],
                            "close": [Function],
                            "closeWithTimeout": [Function],
                            "closeWithoutTimeout": [Function],
                            "contentHasFocus": [Function],
                            "context": Object {},
                            "focusContent": [Function],
                            "handleContentOnClick": [Function],
                            "handleContentOnMouseDown": [Function],
                            "handleContentOnMouseUp": [Function],
                            "handleKeyDown": [Function],
                            "handleOverlayOnClick": [Function],
                            "handleOverlayOnMouseDown": [Function],
                            "moveFromContentToOverlay": null,
                            "open": [Function],
                            "ownerHandlesClose": [Function],
                            "props": Object {
                              "ariaHideApp": false,
                              "bodyOpenClassName": "ReactModal__Body--open",
                              "children": <div
                                className="modal-inside"
>
                                <Connect(Component) />
</div>,
                              "className": "Modal",
                              "closeTimeoutMS": 0,
                              "contentLabel": "Settings",
                              "defaultStyles": Object {
                                "content": Object {
                                  "WebkitOverflowScrolling": "touch",
                                  "background": "#fff",
                                  "border": "1px solid #ccc",
                                  "borderRadius": "4px",
                                  "bottom": "40px",
                                  "left": "40px",
                                  "outline": "none",
                                  "overflow": "auto",
                                  "padding": "20px",
                                  "position": "absolute",
                                  "right": "40px",
                                  "top": "40px",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                },
                              },
                              "isOpen": false,
                              "onRequestClose": [Function],
                              "overlayClassName": "Overlay",
                              "parentSelector": [Function],
                              "portalClassName": "ReactModalPortal",
                              "shouldCloseOnEsc": true,
                              "shouldCloseOnOverlayClick": true,
                              "shouldFocusAfterRender": true,
                              "shouldReturnFocusAfterClose": true,
                              "style": Object {
                                "content": Object {},
                                "overlay": Object {},
                              },
                            },
                            "refs": Object {},
                            "requestClose": [Function],
                            "setContentRef": [Function],
                            "setOverlayRef": [Function],
                            "shouldBeClosed": [Function],
                            "shouldClose": null,
                            "state": Object {
                              "afterOpen": false,
                              "beforeClose": false,
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "isOpen": true,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div />
</div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": <div />,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": [Circular],
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "context": Object {},
              "node": <div
                class="ReactModalPortal"
/>,
              "portal": ModalPortal {
                "_reactInternalFiber": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</Modal>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</Modal>,
                        },
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                      "lineNumber": 9,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "effectTag": 5,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</Modal>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</Modal>,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": <div />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": [Circular],
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 7,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 6,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <Modal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
>
                              <div
                                                            className="modal-inside"
                              >
                                                            <Connect(Component) />
                              </div>
</Modal>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <Modal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
>
                              <div
                                                            className="modal-inside"
                              >
                                                            <Connect(Component) />
                              </div>
</Modal>,
                          },
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div />,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 5,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "isOpen": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "isOpen": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</Modal>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</Modal>,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "isOpen": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "isOpen": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": [Circular],
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": [Circular],
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_reactInternalInstance": Object {},
                "afterClose": [Function],
                "ariaAttributes": [Function],
                "buildClassName": [Function],
                "close": [Function],
                "closeWithTimeout": [Function],
                "closeWithoutTimeout": [Function],
                "contentHasFocus": [Function],
                "context": Object {},
                "focusContent": [Function],
                "handleContentOnClick": [Function],
                "handleContentOnMouseDown": [Function],
                "handleContentOnMouseUp": [Function],
                "handleKeyDown": [Function],
                "handleOverlayOnClick": [Function],
                "handleOverlayOnMouseDown": [Function],
                "moveFromContentToOverlay": null,
                "open": [Function],
                "ownerHandlesClose": [Function],
                "props": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": <div
                    className="modal-inside"
>
                    <Connect(Component) />
</div>,
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "refs": Object {},
                "requestClose": [Function],
                "setContentRef": [Function],
                "setOverlayRef": [Function],
                "shouldBeClosed": [Function],
                "shouldClose": null,
                "state": Object {
                  "afterOpen": false,
                  "beforeClose": false,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "portalRef": [Function],
              "props": Object {
                "ariaHideApp": false,
                "bodyOpenClassName": "ReactModal__Body--open",
                "children": <div
                  className="modal-inside"
>
                  <Connect(Component) />
</div>,
                "className": "Modal",
                "closeTimeoutMS": 0,
                "contentLabel": "Settings",
                "isOpen": false,
                "onRequestClose": [Function],
                "overlayClassName": "Overlay",
                "parentSelector": [Function],
                "portalClassName": "ReactModalPortal",
                "shouldCloseOnEsc": true,
                "shouldCloseOnOverlayClick": true,
                "shouldFocusAfterRender": true,
                "shouldReturnFocusAfterClose": true,
              },
              "refs": Object {},
              "removePortal": [Function],
              "renderPortal": [Function],
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "ariaHideApp": false,
              "bodyOpenClassName": "ReactModal__Body--open",
              "children": <div
                className="modal-inside"
>
                <Connect(Component) />
</div>,
              "className": "Modal",
              "closeTimeoutMS": 0,
              "contentLabel": "Settings",
              "isOpen": false,
              "onRequestClose": [Function],
              "overlayClassName": "Overlay",
              "parentSelector": [Function],
              "portalClassName": "ReactModalPortal",
              "shouldCloseOnEsc": true,
              "shouldCloseOnOverlayClick": true,
              "shouldFocusAfterRender": true,
              "shouldReturnFocusAfterClose": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": ModalPortal {
                "_reactInternalFiber": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 7,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 5,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</Modal>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</Modal>,
                        },
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "isOpen": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "isOpen": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 4,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "isOpen": true,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 1,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "isOpen": true,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div />
</div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                      "lineNumber": 9,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 8,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": <ModalPortal
                        ariaHideApp={false}
                        bodyOpenClassName="ReactModal__Body--open"
                        className="Modal"
                        closeTimeoutMS={0}
                        contentLabel="Settings"
                        defaultStyles={
                                                Object {
                                                                        "content": Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "background": "#fff",
                                                                          "border": "1px solid #ccc",
                                                                          "borderRadius": "4px",
                                                                          "bottom": "40px",
                                                                          "left": "40px",
                                                                          "outline": "none",
                                                                          "overflow": "auto",
                                                                          "padding": "20px",
                                                                          "position": "absolute",
                                                                          "right": "40px",
                                                                          "top": "40px",
                                                                        },
                                                                        "overlay": Object {
                                                                          "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "position": "fixed",
                                                                          "right": 0,
                                                                          "top": 0,
                                                                        },
                                                                      }
                        }
                        isOpen={false}
                        onRequestClose={[Function]}
                        overlayClassName="Overlay"
                        parentSelector={[Function]}
                        portalClassName="ReactModalPortal"
                        shouldCloseOnEsc={true}
                        shouldCloseOnOverlayClick={true}
                        shouldFocusAfterRender={true}
                        shouldReturnFocusAfterClose={true}
                        style={
                                                Object {
                                                                        "content": Object {},
                                                                        "overlay": Object {},
                                                                      }
                        }
>
                        <div
                                                className="modal-inside"
                        >
                                                <Connect(Component) />
                        </div>
</ModalPortal>,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div
                          class="ReactModalPortal"
/>,
                        "implementation": null,
                        "pendingChildren": null,
                      },
                      "tag": 4,
                      "type": null,
                      "updateQueue": null,
                    },
                    "effectTag": 5,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "ariaHideApp": false,
                      "bodyOpenClassName": "ReactModal__Body--open",
                      "children": <div
                        className="modal-inside"
>
                        <Connect(Component) />
</div>,
                      "className": "Modal",
                      "closeTimeoutMS": 0,
                      "contentLabel": "Settings",
                      "isOpen": false,
                      "onRequestClose": [Function],
                      "overlayClassName": "Overlay",
                      "parentSelector": [Function],
                      "portalClassName": "ReactModalPortal",
                      "shouldCloseOnEsc": true,
                      "shouldCloseOnOverlayClick": true,
                      "shouldFocusAfterRender": true,
                      "shouldReturnFocusAfterClose": true,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 6,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</Modal>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Modal
                          ariaHideApp={false}
                          bodyOpenClassName="ReactModal__Body--open"
                          className="Modal"
                          closeTimeoutMS={0}
                          contentLabel="Settings"
                          isOpen={false}
                          onRequestClose={[Function]}
                          overlayClassName="Overlay"
                          parentSelector={[Function]}
                          portalClassName="ReactModalPortal"
                          shouldCloseOnEsc={true}
                          shouldCloseOnOverlayClick={true}
                          shouldFocusAfterRender={true}
                          shouldReturnFocusAfterClose={true}
>
                          <div
                                                    className="modal-inside"
                          >
                                                    <Connect(Component) />
                          </div>
</Modal>,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": <div />,
                      "tag": 5,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": Modal {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "node": <div
                        class="ReactModalPortal"
/>,
                      "portal": [Circular],
                      "portalRef": [Function],
                      "props": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                      },
                      "refs": Object {},
                      "removePortal": [Function],
                      "renderPortal": [Function],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 133,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "memoizedState": Object {
                    "afterOpen": false,
                    "beforeClose": false,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "ariaHideApp": false,
                    "bodyOpenClassName": "ReactModal__Body--open",
                    "children": <div
                      className="modal-inside"
>
                      <Connect(Component) />
</div>,
                    "className": "Modal",
                    "closeTimeoutMS": 0,
                    "contentLabel": "Settings",
                    "defaultStyles": Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    },
                    "isOpen": false,
                    "onRequestClose": [Function],
                    "overlayClassName": "Overlay",
                    "parentSelector": [Function],
                    "portalClassName": "ReactModalPortal",
                    "shouldCloseOnEsc": true,
                    "shouldCloseOnOverlayClick": true,
                    "shouldFocusAfterRender": true,
                    "shouldReturnFocusAfterClose": true,
                    "style": Object {
                      "content": Object {},
                      "overlay": Object {},
                    },
                  },
                  "ref": [Function],
                  "return": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": <ModalPortal
                      ariaHideApp={false}
                      bodyOpenClassName="ReactModal__Body--open"
                      className="Modal"
                      closeTimeoutMS={0}
                      contentLabel="Settings"
                      defaultStyles={
                                            Object {
                                                                  "content": Object {
                                                                    "WebkitOverflowScrolling": "touch",
                                                                    "background": "#fff",
                                                                    "border": "1px solid #ccc",
                                                                    "borderRadius": "4px",
                                                                    "bottom": "40px",
                                                                    "left": "40px",
                                                                    "outline": "none",
                                                                    "overflow": "auto",
                                                                    "padding": "20px",
                                                                    "position": "absolute",
                                                                    "right": "40px",
                                                                    "top": "40px",
                                                                  },
                                                                  "overlay": Object {
                                                                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                                                                    "bottom": 0,
                                                                    "left": 0,
                                                                    "position": "fixed",
                                                                    "right": 0,
                                                                    "top": 0,
                                                                  },
                                                                }
                      }
                      isOpen={false}
                      onRequestClose={[Function]}
                      overlayClassName="Overlay"
                      parentSelector={[Function]}
                      portalClassName="ReactModalPortal"
                      shouldCloseOnEsc={true}
                      shouldCloseOnOverlayClick={true}
                      shouldFocusAfterRender={true}
                      shouldReturnFocusAfterClose={true}
                      style={
                                            Object {
                                                                  "content": Object {},
                                                                  "overlay": Object {},
                                                                }
                      }
>
                      <div
                                            className="modal-inside"
                      >
                                            <Connect(Component) />
                      </div>
</ModalPortal>,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 7,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 5,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 6,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <Modal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
>
                              <div
                                                            className="modal-inside"
                              >
                                                            <Connect(Component) />
                              </div>
</Modal>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <Modal
                              ariaHideApp={false}
                              bodyOpenClassName="ReactModal__Body--open"
                              className="Modal"
                              closeTimeoutMS={0}
                              contentLabel="Settings"
                              isOpen={false}
                              onRequestClose={[Function]}
                              overlayClassName="Overlay"
                              parentSelector={[Function]}
                              portalClassName="ReactModalPortal"
                              shouldCloseOnEsc={true}
                              shouldCloseOnOverlayClick={true}
                              shouldFocusAfterRender={true}
                              shouldReturnFocusAfterClose={true}
>
                              <div
                                                            className="modal-inside"
                              >
                                                            <Connect(Component) />
                              </div>
</Modal>,
                          },
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <div />,
                          "tag": 5,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "isOpen": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "isOpen": true,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 4,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "isOpen": true,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 1,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 1,
                                "first": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                                "hasForceUpdate": false,
                                "isInitialized": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "capturedValue": null,
                                  "expirationTime": 1,
                                  "isForced": false,
                                  "isReplace": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                                                            Object {
                                                                                                                  "isOpen": true,
                                                                                                                }
                                      }
/>,
                                  },
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "isOpen": true,
                                                                                              }
                                }
/>,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div />
</div>,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 0,
                              "first": null,
                              "hasForceUpdate": false,
                              "isInitialized": true,
                              "isProcessing": false,
                              "last": null,
                            },
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 5,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "ariaHideApp": false,
                        "bodyOpenClassName": "ReactModal__Body--open",
                        "children": <div
                          className="modal-inside"
>
                          <Connect(Component) />
</div>,
                        "className": "Modal",
                        "closeTimeoutMS": 0,
                        "contentLabel": "Settings",
                        "isOpen": false,
                        "onRequestClose": [Function],
                        "overlayClassName": "Overlay",
                        "parentSelector": [Function],
                        "portalClassName": "ReactModalPortal",
                        "shouldCloseOnEsc": true,
                        "shouldCloseOnOverlayClick": true,
                        "shouldFocusAfterRender": true,
                        "shouldReturnFocusAfterClose": true,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 6,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "isOpen": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "isOpen": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": Object {
                          "fileName": "C:\\\\Users\\\\Михаил\\\\portfolio\\\\pomodoro-app\\\\src\\\\components\\\\Settings.js",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</Modal>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <Modal
                            ariaHideApp={false}
                            bodyOpenClassName="ReactModal__Body--open"
                            className="Modal"
                            closeTimeoutMS={0}
                            contentLabel="Settings"
                            isOpen={false}
                            onRequestClose={[Function]}
                            overlayClassName="Overlay"
                            parentSelector={[Function]}
                            portalClassName="ReactModalPortal"
                            shouldCloseOnEsc={true}
                            shouldCloseOnOverlayClick={true}
                            shouldFocusAfterRender={true}
                            shouldReturnFocusAfterClose={true}
>
                            <div
                                                        className="modal-inside"
                            >
                                                        <Connect(Component) />
                            </div>
</Modal>,
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 5,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "isOpen": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "isOpen": true,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 4,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": null,
                            "child": [Circular],
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "isOpen": true,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 1,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": FiberNode {
                                "_debugID": 1,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "alternate": [Circular],
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div />
</div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "remainingExpirationTime": 0,
                                },
                                "tag": 3,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "callbackList": null,
                                  "capturedValues": null,
                                  "expirationTime": 1,
                                  "first": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                  "hasForceUpdate": false,
                                  "isInitialized": false,
                                  "isProcessing": false,
                                  "last": Object {
                                    "callback": null,
                                    "capturedValue": null,
                                    "expirationTime": 1,
                                    "isForced": false,
                                    "isReplace": false,
                                    "next": null,
                                    "partialState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                                                                Object {
                                                                                                                        "isOpen": true,
                                                                                                                      }
                                        }
/>,
                                    },
                                  },
                                },
                              },
                              "child": [Circular],
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "isOpen": true,
                                                                                                    }
                                  }
/>,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div />
</div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "remainingExpirationTime": 0,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "isOpen": true,
                                                                                                          }
                                    }
/>,
                                },
                                "callbackList": null,
                                "capturedValues": null,
                                "expirationTime": 0,
                                "first": null,
                                "hasForceUpdate": false,
                                "isInitialized": true,
                                "isProcessing": false,
                                "last": null,
                              },
                            },
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "isOpen": true,
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": null,
                          "tag": 1,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": <div />,
                        "tag": 5,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": Modal {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "node": <div
                          class="ReactModalPortal"
/>,
                        "portal": [Circular],
                        "portalRef": [Function],
                        "props": Object {
                          "ariaHideApp": false,
                          "bodyOpenClassName": "ReactModal__Body--open",
                          "children": <div
                            className="modal-inside"
>
                            <Connect(Component) />
</div>,
                          "className": "Modal",
                          "closeTimeoutMS": 0,
                          "contentLabel": "Settings",
                          "isOpen": false,
                          "onRequestClose": [Function],
                          "overlayClassName": "Overlay",
                          "parentSelector": [Function],
                          "portalClassName": "ReactModalPortal",
                          "shouldCloseOnEsc": true,
                          "shouldCloseOnOverlayClick": true,
                          "shouldFocusAfterRender": true,
                          "shouldReturnFocusAfterClose": true,
                        },
                        "refs": Object {},
                        "removePortal": [Function],
                        "renderPortal": [Function],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div
                        class="ReactModalPortal"
/>,
                      "implementation": null,
                      "pendingChildren": null,
                    },
                    "tag": 4,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": [Circular],
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_reactInternalInstance": Object {},
                "afterClose": [Function],
                "ariaAttributes": [Function],
                "buildClassName": [Function],
                "close": [Function],
                "closeWithTimeout": [Function],
                "closeWithoutTimeout": [Function],
                "contentHasFocus": [Function],
                "context": Object {},
                "focusContent": [Function],
                "handleContentOnClick": [Function],
                "handleContentOnMouseDown": [Function],
                "handleContentOnMouseUp": [Function],
                "handleKeyDown": [Function],
                "handleOverlayOnClick": [Function],
                "handleOverlayOnMouseDown": [Function],
                "moveFromContentToOverlay": null,
                "open": [Function],
                "ownerHandlesClose": [Function],
                "props": Object {
                  "ariaHideApp": false,
                  "bodyOpenClassName": "ReactModal__Body--open",
                  "children": <div
                    className="modal-inside"
>
                    <Connect(Component) />
</div>,
                  "className": "Modal",
                  "closeTimeoutMS": 0,
                  "contentLabel": "Settings",
                  "defaultStyles": Object {
                    "content": Object {
                      "WebkitOverflowScrolling": "touch",
                      "background": "#fff",
                      "border": "1px solid #ccc",
                      "borderRadius": "4px",
                      "bottom": "40px",
                      "left": "40px",
                      "outline": "none",
                      "overflow": "auto",
                      "padding": "20px",
                      "position": "absolute",
                      "right": "40px",
                      "top": "40px",
                    },
                    "overlay": Object {
                      "backgroundColor": "rgba(255, 255, 255, 0.75)",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                    },
                  },
                  "isOpen": false,
                  "onRequestClose": [Function],
                  "overlayClassName": "Overlay",
                  "parentSelector": [Function],
                  "portalClassName": "ReactModalPortal",
                  "shouldCloseOnEsc": true,
                  "shouldCloseOnOverlayClick": true,
                  "shouldFocusAfterRender": true,
                  "shouldReturnFocusAfterClose": true,
                  "style": Object {
                    "content": Object {},
                    "overlay": Object {},
                  },
                },
                "refs": Object {},
                "requestClose": [Function],
                "setContentRef": [Function],
                "setOverlayRef": [Function],
                "shouldBeClosed": [Function],
                "shouldClose": null,
                "state": Object {
                  "afterOpen": false,
                  "beforeClose": false,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "ariaHideApp": false,
                "bodyOpenClassName": "ReactModal__Body--open",
                "children": <div
                  className="modal-inside"
>
                  <Connect(Component) />
</div>,
                "className": "Modal",
                "closeTimeoutMS": 0,
                "contentLabel": "Settings",
                "defaultStyles": Object {
                  "content": Object {
                    "WebkitOverflowScrolling": "touch",
                    "background": "#fff",
                    "border": "1px solid #ccc",
                    "borderRadius": "4px",
                    "bottom": "40px",
                    "left": "40px",
                    "outline": "none",
                    "overflow": "auto",
                    "padding": "20px",
                    "position": "absolute",
                    "right": "40px",
                    "top": "40px",
                  },
                  "overlay": Object {
                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                  },
                },
                "isOpen": false,
                "onRequestClose": [Function],
                "overlayClassName": "Overlay",
                "parentSelector": [Function],
                "portalClassName": "ReactModalPortal",
                "shouldCloseOnEsc": true,
                "shouldCloseOnOverlayClick": true,
                "shouldFocusAfterRender": true,
                "shouldReturnFocusAfterClose": true,
                "style": Object {
                  "content": Object {},
                  "overlay": Object {},
                },
              },
              "ref": [Function],
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
